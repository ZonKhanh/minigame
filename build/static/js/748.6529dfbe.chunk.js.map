{"version":3,"file":"static/js/748.6529dfbe.chunk.js","mappings":"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","sources":["components/GameContentModal/Index.jsx","utils/api.js","components/ResultGameModal/Index.jsx","components/CountdownModal/Index.jsx","components/PlayPage/Index.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport './Index.css';\r\nimport coin from '../../assets/img/play-page/coin.png';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../utils/api';\r\nimport { showGameOver } from '../ErrorModal/ErrorSlice';\r\nimport {\r\n  setGameData,\r\n  showRandomNameCorrect,\r\n  setTimerInterval,\r\n  resetAnswerAndShowRandom,\r\n  showCountdownTime,\r\n  trueCorrect\r\n} from './GameContentSlice';\r\n\r\nconst GameContent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const timeRemainder = useSelector(state => state.gameContentModal.gameTime.timeRemainder);\r\n  const numberCorrectDisplay = useSelector(state => state.gameContentModal.numberCorrectDisplay);\r\n  const showGameContent = useSelector((state) => state.gameContentModal.showGameContent);\r\n  const nameCorrectIndex = useSelector((state) => state.gameContentModal.nameCorrectIndex);\r\n  const randomNameCorrect = useSelector((state) => state.gameContentModal.randomNameCorrect);\r\n  const requiredNumberProducts = useSelector((state) => state.gameContentModal.requiredNumberProducts);\r\n  const audioRatio = useSelector((state) => state.gameContentModal.gameSound.audioRatio);\r\n  const score = useSelector((state) => state.gameContentModal.currentScore);\r\n  const gameLevel = useSelector((state) => state.gameContentModal.currentLevel);\r\n  const gameTime = useSelector((state) => state.gameContentModal.gameTime);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const shuffleCharacterCards = useCallback(() => {\r\n    const cardList = document.querySelector('.character-card-list');\r\n    const cards = Array.from(cardList.children);\r\n    for (let i = cards.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      cardList.appendChild(cards[j]);\r\n    }\r\n    if (cardList) {\r\n      cardList.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        inline: \"center\",\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const resetAnswer = useCallback(() => {\r\n    document.querySelectorAll('.number-correct span:last-child').forEach(span => {\r\n      span.innerText = '0';\r\n    });\r\n    document.querySelectorAll('.name-correct-desc').forEach(desc => {\r\n      desc.innerText = '';\r\n    });\r\n    document.querySelectorAll('.number-correct').forEach(correct => {\r\n      correct.style.display = 'none';\r\n    });\r\n    if (gameTime.timerInterval) {\r\n      clearInterval(gameTime.timerInterval);\r\n    }\r\n    dispatch(resetAnswerAndShowRandom());\r\n    shuffleCharacterCards();\r\n  }, [dispatch, gameTime.timerInterval, shuffleCharacterCards]);\r\n\r\n  const handleCorrectAnswer = useCallback((productCard) => {\r\n    const numberCorrectElement = productCard.querySelector('.number-correct span:last-child');\r\n    const newValue = Number(numberCorrectElement.innerText) + 1;\r\n    const click = document.querySelector('.name-correct-number').innerText.toLowerCase();\r\n    numberCorrectElement.innerText = newValue;\r\n    productCard.querySelector('.number-correct').style.display = \"flex\";\r\n    const clickNumber = parseInt(click, 10);\r\n\r\n    if (newValue > clickNumber) {\r\n      setTimeout(() => {\r\n        dispatch(showGameOver());\r\n      }, 300);\r\n      console.log('Bạn đã chọn quá số lượng!');\r\n    } else if (newValue === clickNumber) {\r\n      setTimeout(() => {\r\n        dispatch(trueCorrect());\r\n        resetAnswer();\r\n      }, 300);\r\n      console.log('Bạn đã chọn đúng');\r\n    }\r\n  }, [dispatch, resetAnswer]);\r\n\r\n  const handleIncorrectAnswer = useCallback(() => {\r\n    dispatch(showGameOver());\r\n    console.log('Bạn đã chọn sai!');\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (showGameContent) {\r\n      dispatch(showCountdownTime());\r\n      const timerInterval = setInterval(() => {\r\n        dispatch(showCountdownTime());\r\n      }, 1000);\r\n\r\n      dispatch(setTimerInterval(timerInterval));\r\n      return () => {\r\n        clearInterval(timerInterval);\r\n        // dispatch(setTimerInterval(null));\r\n        // dispatch(clearGameInterval());\r\n      };\r\n    }\r\n  }, [showGameContent, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (showGameContent) {\r\n      fetchData(process.env.PUBLIC_URL + '/data.json')\r\n        .then((data) => {\r\n          const processedData = {\r\n            products: data.products.map(product => ({\r\n              ...product,\r\n              url: data.productsAssetsPath + product.url,\r\n            })),\r\n            characters: data.characters.map(character => ({\r\n              ...character,\r\n              url: data.charactersAssetsPath + character.url,\r\n              activeUrl: data.charactersAssetsPath + character.activeUrl,\r\n            })),\r\n            levels: data.levels || [],\r\n          };\r\n\r\n          if (processedData.products.length > 0) {\r\n            dispatch(setGameData(processedData));\r\n            setCharacters(processedData.characters);\r\n            setProducts(processedData.products);\r\n            setDataLoaded(true);\r\n            dispatch(showRandomNameCorrect());\r\n          } else {\r\n            console.error('Products data is empty');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching data:', error);\r\n        });\r\n    }\r\n  }, [showGameContent, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (dataLoaded) {\r\n      console.log('Random Name Correct:', randomNameCorrect);\r\n      console.log('Required Number Products:', requiredNumberProducts);\r\n      console.log('audioRatio', audioRatio);\r\n\r\n    }\r\n  }, [dataLoaded, products, randomNameCorrect, requiredNumberProducts, audioRatio]);\r\n\r\n  useEffect(() => {\r\n    const getAnswer = () => {\r\n      document.querySelectorAll('.product-card').forEach(card => {\r\n        card.addEventListener('click', (event) => {\r\n          const productCard = event.currentTarget;\r\n          const requireProduct = cleanString(document.querySelector('.name-correct-desc').innerText.toLowerCase());\r\n          const productTitle = cleanString(productCard.querySelector('.product-card-name').innerText.toLowerCase());\r\n          if (productTitle === requireProduct) {\r\n            handleCorrectAnswer(productCard);\r\n          } else {\r\n            setTimeout(() => {\r\n              handleIncorrectAnswer();\r\n            }, 300);\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const cleanString = (str) => {\r\n      return str.replace(/[^a-z0-9]/gi, '').trim();\r\n    };\r\n\r\n    if (products.length > 0) {\r\n      getAnswer();\r\n    }\r\n  }, [products, handleCorrectAnswer, handleIncorrectAnswer]);\r\n\r\n  useEffect(() => {\r\n    if (timeRemainder <= 0) {\r\n      dispatch(showGameOver());\r\n    }\r\n  }, [timeRemainder, dispatch]);\r\n\r\n  if (!showGameContent) return null;\r\n\r\n  return (\r\n    <div className=\"game-content-modal\">\r\n      <div className=\"game-content\" style={{ display: showGameContent ? 'flex' : 'none' }}>\r\n        <div className=\"play-top-site row\">\r\n          <div className=\"play-top-site-left col-xl-6 col-lg-6 col-sm-6\">\r\n            <div className=\"timer-site\">\r\n              <div className=\"timer-range\" style={{ width: gameTime.timeRemainder + '%' }}></div>\r\n              <div className=\"level-site\">\r\n                Level: <span id=\"level\">{gameLevel}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"play-top-site-right col-xl-6 col-lg-6\">\r\n            <div className=\"score-site\">\r\n              <img className=\"crown-img\" src={coin} alt=\"coin\" />\r\n              <div className=\"current-score\">{score}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row product-card-list\" style={{ marginLeft: '0', marginRight: '0' }}>\r\n          {products.map((product, index) => (\r\n            <div key={index} className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-xs-6 product-list-content\">\r\n              <div className=\"product-card\">\r\n                <img src={`${process.env.PUBLIC_URL}${product.url}`} alt={product.title} className=\"product-card-img\" />\r\n                <div className=\"number-correct\" style={{ display: numberCorrectDisplay }}>\r\n                  <span>x</span>\r\n                  <span>0</span>\r\n                </div>\r\n                <span className=\"product-card-name\">{product.title}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"row character-card-list\" style={{ marginLeft: '0', marginRight: '0' }}>\r\n          {characters.map((character, index) => (\r\n            <div key={index} className=\"col-xl-3 col-lg-3 col-md-4 col-sm-6 col-xs-6 character-list-content\">\r\n              <img\r\n                src={character.url}\r\n                alt={`character-${index + 1}-card`}\r\n                className={`character-card character-${index + 1}-card`}\r\n                style={{ display: index === nameCorrectIndex ? 'none' : 'block' }}\r\n              />\r\n              <img\r\n                src={character.activeUrl}\r\n                alt={`character-${index + 1}-card-active`}\r\n                className={`character-card character-${index + 1}-card-active`}\r\n                style={{ display: index === nameCorrectIndex ? 'block' : 'none' }}\r\n              />\r\n              {index === nameCorrectIndex && (\r\n                <div className=\"name-correct\">\r\n                  <span className=\"name-correct-number\" style={{ marginRight: '5px' }}>{requiredNumberProducts}</span>\r\n                  <span className=\"name-correct-desc\">{randomNameCorrect}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameContent;\r\n","export const fetchData = async (url) => {\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return response.json();\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport bgStart from '../../assets/img/general/bg-start.png';\r\nimport './Index.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleCountdownModal } from '../CountdownModal/CountdownSlice';\r\n\r\nconst ResultGameModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const showResultGameModal = useSelector(state => state.gameContentModal.showResultGameModal);\r\n    const finalScore = useSelector(state => state.gameContentModal.finalScore);\r\n\r\n    // Result Game\r\n    useEffect(() => {\r\n        if (showResultGameModal) {\r\n\r\n            document.querySelector('.modal-result-game').style.display = 'flex';\r\n            document.querySelector('.final-score-text').innerText = finalScore;\r\n\r\n            document.querySelector('.restart-game-text').addEventListener('click', () => {\r\n                document.querySelector('.modal-result-game').style.display = 'none';\r\n                dispatch(toggleCountdownModal(true));\r\n            });\r\n\r\n            document.querySelector('.result-game-button-close').addEventListener('click', () => {\r\n                document.querySelector('.modal-result-game').style.display = 'none';\r\n                document.querySelector('.modal-result-game').style.display = 'none';\r\n                const productCardLists = document.querySelectorAll('.product-card-list');\r\n                productCardLists.forEach(card => {\r\n                    card.style.pointerEvents = 'none';\r\n                    // card.style.opacity = '0.5'; // làm mờ\r\n                });\r\n            });\r\n\r\n            document.querySelector('.cancel-game-text').addEventListener('click', () => {\r\n                document.querySelector('.modal-result-game').style.display = 'none';\r\n                const productCardLists = document.querySelectorAll('.product-card-list');\r\n                productCardLists.forEach(card => {\r\n                    card.style.pointerEvents = 'none';\r\n                    // card.style.opacity = '0.5'; // làm mờ\r\n                });\r\n            });\r\n        }\r\n    }, [showResultGameModal, finalScore, dispatch]);\r\n\r\n\r\n    return (\r\n        <div className=\"modal-result-game\">\r\n            <div className=\"result-game-wrapper\">\r\n                <div className=\"result-game-header\">\r\n                    <img src={bgStart} alt=\"Game result\" />\r\n                    <button className=\"result-game-button-close\"></button>\r\n                    <h2 id=\"your-own-score\">Your Own Score</h2>\r\n                </div>\r\n                <h1 className=\"final-score-text\">0</h1>\r\n                <div className=\"choices-group\">\r\n                    <button className=\"primary-button cancel-game-text\">Cancel game</button>\r\n                    <button className=\"primary-button restart-game-text\">Restart game</button>\r\n                </div>\r\n                <div className=\"register-toggle-label\">\r\n                    <p>Register</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ResultGameModal;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  setIntervalId, startCountdown } from './CountdownSlice';\r\nimport './Index.css'\r\n\r\nconst CountdownModal = () => {\r\n  const dispatch = useDispatch();\r\n  const countdownTime = useSelector((state) => state.countdownModal.countdownTime);\r\n  const showCountdownModal = useSelector((state) => state.countdownModal.showCountdownModal);\r\n  const intervalIdRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (showCountdownModal) {\r\n      dispatch(startCountdown());\r\n    }\r\n  }, [showCountdownModal, dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Cập nhật biến tạm để giữ giá trị của intervalIdRef.current\r\n    const intervalId = intervalIdRef.current;\r\n\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n        dispatch(setIntervalId(null));\r\n      }\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (!showCountdownModal) return null;\r\n\r\n  return (\r\n    <div className=\"modal-count-down\">\r\n      <span>Count Down Game</span>\r\n      <h1 className=\"count-down-text\">{countdownTime}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownModal;\r\n","// import React from 'react';\r\nimport React from 'react';\r\nimport './Index.css';\r\nimport GamecontentModal from '../GameContentModal/Index';\r\nimport ResultGameModal from '../ResultGameModal/Index';\r\nimport CountdownModal from '../CountdownModal/Index';\r\nimport bgPageContent from '../../assets/img/general/bg-page-content.png';\r\n\r\nfunction PlayPage() {\r\n\r\n  return (\r\n    <div className=\"main-bottom-site\">\r\n      <div className=\"play-page-main-bottom-site\">\r\n        <div className=\"container main-bottom-content-row\">\r\n          <div className=\"play-page-content\" id=\"play-page\" style={{\r\n            height: '100%',\r\n            minHeight: '85vh',\r\n            overflow: 'hidden',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${bgPageContent})`, // Sử dụng biến ảnh đã nhập\r\n            borderRadius: '20px'\r\n          }}>\r\n            <audio className=\"audio-background\"></audio>\r\n            <audio className=\"audio-fail\"></audio>\r\n            <ResultGameModal />\r\n            <CountdownModal />\r\n            <GamecontentModal />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayPage;\r\n"],"names":["GameContent","dispatch","useDispatch","timeRemainder","useSelector","state","gameContentModal","gameTime","numberCorrectDisplay","showGameContent","nameCorrectIndex","randomNameCorrect","requiredNumberProducts","audioRatio","gameSound","score","currentScore","gameLevel","currentLevel","characters","setCharacters","useState","products","setProducts","dataLoaded","setDataLoaded","shuffleCharacterCards","useCallback","cardList","document","querySelector","cards","Array","from","children","i","length","j","Math","floor","random","appendChild","scrollIntoView","behavior","inline","resetAnswer","querySelectorAll","forEach","span","innerText","desc","correct","style","display","timerInterval","clearInterval","resetAnswerAndShowRandom","handleCorrectAnswer","productCard","numberCorrectElement","newValue","Number","click","toLowerCase","clickNumber","parseInt","setTimeout","showGameOver","console","log","trueCorrect","handleIncorrectAnswer","useEffect","showCountdownTime","setInterval","setTimerInterval","async","response","fetch","url","ok","Error","json","fetchData","then","data","processedData","map","product","productsAssetsPath","character","charactersAssetsPath","activeUrl","levels","setGameData","showRandomNameCorrect","error","catch","cleanString","str","replace","trim","card","addEventListener","event","currentTarget","requireProduct","_jsx","className","_jsxs","width","id","src","alt","marginLeft","marginRight","index","concat","process","title","ResultGameModal","showResultGameModal","finalScore","toggleCountdownModal","pointerEvents","bgStart","CountdownModal","countdownTime","countdownModal","showCountdownModal","intervalIdRef","useRef","startCountdown","intervalId","current","setIntervalId","height","minHeight","overflow","backgroundRepeat","backgroundSize","backgroundImage","bgPageContent","borderRadius","GamecontentModal"],"sourceRoot":""}