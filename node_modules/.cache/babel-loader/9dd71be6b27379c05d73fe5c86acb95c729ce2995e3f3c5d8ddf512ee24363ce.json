{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\AUDIO\\\\minigame-react\\\\src\\\\components\\\\CountdownModal\\\\CountdownModal.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCountdownTime, toggleCountdownModal, setIntervalId, toggleGameContent } from '../../store/gameSlice';\n// import '../CountdownModal/CountdownModal.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownModal = () => {\n  // const dispatch = useDispatch();\n  // const countdownTime = useSelector((state) => state.game.countdownTime);\n  // const showCountdownModal = useSelector((state) => state.game.showCountdownModal);\n  // const intervalId = useSelector((state) => state.game.intervalId);\n\n  // useEffect(() => {\n  //   if (showCountdownModal) {\n  //     const initCountDownTime = 3;\n  //     dispatch(setCountdownTime(initCountDownTime));\n  //     const id = setInterval(() => {\n  //       dispatch((dispatch, getState) => {\n  //         const { game } = getState();\n  //         const newTime = game.countdownTime - 1;\n  //         if (newTime <= 0) {\n  //           clearInterval(game.intervalId);\n  //           dispatch(setIntervalId(null));\n  //           dispatch(toggleCountdownModal(false));\n  //           dispatch(toggleGameContent(true));\n  //         } else {\n  //           dispatch(setCountdownTime(newTime));\n  //         }\n  //       });\n  //     }, 1000);\n\n  //     dispatch(setIntervalId(id));\n  // }\n  //     return () => {\n  //         if (intervalId) {\n  //           clearInterval(intervalId);\n  //           dispatch(setIntervalId(null));\n  //         }\n  //       };\n  //     }, [showCountdownModal, dispatch]);\n\n  if (!showCountdownModal) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-count-down\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Count Down Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = CountdownModal;\nexport default CountdownModal;\nvar _c;\n$RefreshReg$(_c, \"CountdownModal\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","setCountdownTime","toggleCountdownModal","setIntervalId","toggleGameContent","jsxDEV","_jsxDEV","CountdownModal","showCountdownModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/components/CountdownModal/CountdownModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setCountdownTime,\r\n  toggleCountdownModal,\r\n  setIntervalId,\r\n  toggleGameContent,\r\n} from '../../store/gameSlice';\r\n// import '../CountdownModal/CountdownModal.css'\r\n\r\nconst CountdownModal = () => {\r\n    // const dispatch = useDispatch();\r\n    // const countdownTime = useSelector((state) => state.game.countdownTime);\r\n    // const showCountdownModal = useSelector((state) => state.game.showCountdownModal);\r\n    // const intervalId = useSelector((state) => state.game.intervalId);\r\n\r\n    // useEffect(() => {\r\n    //   if (showCountdownModal) {\r\n    //     const initCountDownTime = 3;\r\n    //     dispatch(setCountdownTime(initCountDownTime));\r\n    //     const id = setInterval(() => {\r\n    //       dispatch((dispatch, getState) => {\r\n    //         const { game } = getState();\r\n    //         const newTime = game.countdownTime - 1;\r\n    //         if (newTime <= 0) {\r\n    //           clearInterval(game.intervalId);\r\n    //           dispatch(setIntervalId(null));\r\n    //           dispatch(toggleCountdownModal(false));\r\n    //           dispatch(toggleGameContent(true));\r\n    //         } else {\r\n    //           dispatch(setCountdownTime(newTime));\r\n    //         }\r\n    //       });\r\n    //     }, 1000);\r\n\r\n    //     dispatch(setIntervalId(id));\r\n    // }\r\n    //     return () => {\r\n    //         if (intervalId) {\r\n    //           clearInterval(intervalId);\r\n    //           dispatch(setIntervalId(null));\r\n    //         }\r\n    //       };\r\n    //     }, [showCountdownModal, dispatch]);\r\n\r\n        if (!showCountdownModal) return null;\r\n    return (\r\n        <div className=\"modal-count-down\">\r\n            <span>Count Down Game</span>\r\n            {/* <h1 className=\"count-down-text\">{countdownTime}</h1> */}\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default CountdownModal;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,gBAAgB,EAChBC,oBAAoB,EACpBC,aAAa,EACbC,iBAAiB,QACZ,uBAAuB;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,IAAI,CAACC,kBAAkB,EAAE,OAAO,IAAI;EACxC,oBACIF,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BJ,OAAA;MAAAI,QAAA,EAAM;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAGd,CAAC;AAAAC,EAAA,GA3CKR,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}