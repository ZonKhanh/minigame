{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentScore: 0,\n  currentLevel: 1,\n  showGameContent: false,\n  numberCorrect: 0,\n  numberCorrectDisplay: 'none',\n  randomNameCorrect: '',\n  requiredNumberProducts: '',\n  nameCorrectIndex: null,\n  gameTime: {\n    timeRemainder: 100,\n    timeStep: 1,\n    timerInterval: null\n  },\n  characters: [],\n  products: [],\n  levels: []\n};\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setGameData(state, action) {\n      state.products = action.payload.products;\n      state.characters = action.payload.characters;\n      state.levels = action.payload.levels;\n    },\n    showGameContent(state) {\n      state.showGameContent = true;\n    },\n    hideGameContent(state) {\n      state.showGameContent = false;\n    },\n    incrementScore(state) {\n      state.currentScore += 10;\n    },\n    updateGameLevel(state) {\n      state.currentLevel += 1;\n    },\n    resetCountdownTime(state) {\n      state.gameTime.timeRemainder = 100;\n    },\n    showCountdownTime(state) {\n      state.gameTime.timeRemainder -= state.gameTime.timeStep;\n    },\n    setTimerInterval(state, action) {\n      state.gameTime.timerInterval = action.payload;\n    },\n    resetTimeRemainder(state, action) {\n      state.gameTime.timeRemainder = action.payload;\n    },\n    showRandomNameCorrect(state) {\n      const randomIndex = Math.floor(Math.random() * state.products.length);\n      const selectedProduct = state.products[randomIndex];\n      state.randomNameCorrect = selectedProduct.title;\n      state.requiredNumberProducts = Math.floor(Math.random() * 10) + 1;\n    },\n    incrementNumberCorrect(state) {\n      state.numberCorrect += 1;\n    },\n    resetNumberCorrect(state) {\n      state.numberCorrect = 0;\n    },\n    showGameOver(state) {\n      state.showGameContent = false;\n      // Có thể thêm các hành động khác khi game kết thúc\n    },\n    playSoundGameOver(state) {\n      // Hàm để phát nhạc game over\n    },\n    pauseCountdownTime(state) {\n      if (state.gameTime.timerInterval) {\n        clearInterval(state.gameTime.timerInterval);\n      }\n      state.gameTime.timerInterval = null;\n    }\n  }\n});\nexport const {\n  setGameData,\n  showGameContent,\n  hideGameContent,\n  incrementScore,\n  updateGameLevel,\n  resetCountdownTime,\n  showCountdownTime,\n  setTimerInterval,\n  resetTimeRemainder,\n  showRandomNameCorrect,\n  incrementNumberCorrect,\n  resetNumberCorrect,\n  showGameOver,\n  playSoundGameOver,\n  pauseCountdownTime\n} = gameSlice.actions;\nexport default gameSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentScore","currentLevel","showGameContent","numberCorrect","numberCorrectDisplay","randomNameCorrect","requiredNumberProducts","nameCorrectIndex","gameTime","timeRemainder","timeStep","timerInterval","characters","products","levels","gameSlice","name","reducers","setGameData","state","action","payload","hideGameContent","incrementScore","updateGameLevel","resetCountdownTime","showCountdownTime","setTimerInterval","resetTimeRemainder","showRandomNameCorrect","randomIndex","Math","floor","random","length","selectedProduct","title","incrementNumberCorrect","resetNumberCorrect","showGameOver","playSoundGameOver","pauseCountdownTime","clearInterval","actions","reducer"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/components/GameContentModal/GameContentModal.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  currentScore: 0,\r\n  currentLevel: 1,\r\n  showGameContent: false,\r\n  numberCorrect: 0,\r\n  numberCorrectDisplay: 'none',\r\n  randomNameCorrect: '',\r\n  requiredNumberProducts: '',\r\n  nameCorrectIndex: null,\r\n  gameTime: {\r\n    timeRemainder: 100,\r\n    timeStep: 1,\r\n    timerInterval: null,\r\n  },\r\n  characters: [],\r\n  products: [],\r\n  levels: [],\r\n};\r\n\r\nconst gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    setGameData(state, action) {\r\n      state.products = action.payload.products;\r\n      state.characters = action.payload.characters;\r\n      state.levels = action.payload.levels;\r\n    },\r\n    showGameContent(state) {\r\n      state.showGameContent = true;\r\n    },\r\n    hideGameContent(state) {\r\n      state.showGameContent = false;\r\n    },\r\n    incrementScore(state) {\r\n      state.currentScore += 10;\r\n    },\r\n    updateGameLevel(state) {\r\n      state.currentLevel += 1;\r\n    },\r\n    resetCountdownTime(state) {\r\n      state.gameTime.timeRemainder = 100;\r\n    },\r\n    showCountdownTime(state) {\r\n      state.gameTime.timeRemainder -= state.gameTime.timeStep;\r\n    },\r\n    setTimerInterval(state, action) {\r\n      state.gameTime.timerInterval = action.payload;\r\n    },\r\n    resetTimeRemainder(state, action) {\r\n      state.gameTime.timeRemainder = action.payload;\r\n    },\r\n    showRandomNameCorrect(state) {\r\n      const randomIndex = Math.floor(Math.random() * state.products.length);\r\n      const selectedProduct = state.products[randomIndex];\r\n      state.randomNameCorrect = selectedProduct.title;\r\n      state.requiredNumberProducts = Math.floor(Math.random() * 10) + 1;\r\n    },\r\n    incrementNumberCorrect(state) {\r\n      state.numberCorrect += 1;\r\n    },\r\n    resetNumberCorrect(state) {\r\n      state.numberCorrect = 0;\r\n    },\r\n    showGameOver(state) {\r\n      state.showGameContent = false;\r\n      // Có thể thêm các hành động khác khi game kết thúc\r\n    },\r\n    playSoundGameOver(state) {\r\n      // Hàm để phát nhạc game over\r\n    },\r\n    pauseCountdownTime(state) {\r\n      if (state.gameTime.timerInterval) {\r\n        clearInterval(state.gameTime.timerInterval);\r\n      }\r\n      state.gameTime.timerInterval = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setGameData,\r\n  showGameContent,\r\n  hideGameContent,\r\n  incrementScore,\r\n  updateGameLevel,\r\n  resetCountdownTime,\r\n  showCountdownTime,\r\n  setTimerInterval,\r\n  resetTimeRemainder,\r\n  showRandomNameCorrect,\r\n  incrementNumberCorrect,\r\n  resetNumberCorrect,\r\n  showGameOver,\r\n  playSoundGameOver,\r\n  pauseCountdownTime,\r\n} = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}