{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\AUDIO\\\\minigame-react\\\\src\\\\fetchTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { fetchData } from '../src/utils/api';\nimport { products, characters } from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchTest = () => {\n  _s();\n  useEffect(() => {\n    const testFetch = async () => {\n      try {\n        const data = await fetchData('../public/data.json');\n        console.log('Fetched data:', data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    testFetch();\n  }, []);\n  console.log('Products:', products);\n  console.log('Characters:', characters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Check the console for fetch results.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchTest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FetchTest;\nexport default FetchTest;\nvar _c;\n$RefreshReg$(_c, \"FetchTest\");","map":{"version":3,"names":["React","useEffect","fetchData","products","characters","jsxDEV","_jsxDEV","FetchTest","_s","testFetch","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/fetchTest.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { fetchData } from '../src/utils/api';\r\nimport {products, characters} from '../';\r\nconst FetchTest = () => {\r\n  useEffect(() => {\r\n    const testFetch = async () => {\r\n      try {\r\n        const data = await fetchData('../public/data.json');\r\n        console.log('Fetched data:', data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    testFetch();\r\n  }, []);\r\n  console.log('Products:', products);\r\n  console.log('Characters:', characters);\r\n  return (\r\n    <div>\r\n      \r\n      Check the console for fetch results.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchTest;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,QAAQ,EAAEC,UAAU,QAAO,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtBP,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMR,SAAS,CAAC,qBAAqB,CAAC;QACnDS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAET,QAAQ,CAAC;EAClCQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAER,UAAU,CAAC;EACtC,oBACEE,OAAA;IAAAQ,QAAA,EAAK;EAGL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACV,EAAA,CArBID,SAAS;AAAAY,EAAA,GAATZ,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}