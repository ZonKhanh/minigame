{"ast":null,"code":"const audioAssetsPath = \"assets/music/\";\nconst viewAssetsPath = \"view/\";\nclass playGame {\n  constructor() {\n    // Khởi tạo dữ liệu game\n    this.initGameData();\n    // Tải dữ liệu từ JSON\n    this.loadData();\n    // Khởi tạo các biến game\n    this.initGameVariables();\n  }\n\n  // Khởi tạo dữ liệu game\n  initGameData() {\n    this.listProducts = [];\n    this.listCharacters = [];\n    this.listProductNames = [];\n    this.levels = [];\n    this.timeStepPercentage = [];\n  }\n\n  // Tải dữ liệu từ file JSON\n  loadData() {\n    $.getJSON('assets/data.json', data => {\n      // Xử lý dữ liệu sau khi tải\n      this.processData(data);\n      // Kích hoạt sự kiện 'dataLoaded' khi dữ liệu đã được tải\n      $(document).trigger('dataLoaded', {\n        products: this.listProducts,\n        characters: this.listCharacters,\n        listName: this.listProductNames,\n        timeStepPercentage: this.timeStepPercentage,\n        levels: this.levels\n      });\n    }).fail((jqXHR, textStatus, errorThrown) => {\n      console.error('Error fetching data:', errorThrown); // Báo lỗi nếu có lỗi khi tải dữ liệu\n    });\n  }\n\n  // Xử lý dữ liệu sau khi tải\n  processData(data) {\n    const productsAssetsPath = data.productsAssetsPath;\n    const charactersAssetsPath = data.charactersAssetsPath;\n    if (data && data.products && Array.isArray(data.products)) {\n      this.listProducts = data.products.map(product => ({\n        ...product,\n        url: productsAssetsPath + product.url\n      }));\n      this.listProductNames = this.listProducts.map(product => product.title.toLowerCase());\n    } else {\n      console.error('Invalid product data format');\n    }\n    if (data && data.characters && Array.isArray(data.characters)) {\n      this.listCharacters = data.characters.map(character => ({\n        ...character,\n        url: charactersAssetsPath + character.url,\n        activeUrl: charactersAssetsPath + character.activeUrl\n      }));\n    } else {\n      console.error('Invalid character data format');\n    }\n    if (data && data.levels && Array.isArray(data.levels)) {\n      this.levels = data.levels;\n    } else {\n      console.error('Invalid levels data format');\n    }\n  }\n\n  // Khởi tạo các biến game\n  initGameVariables() {\n    this.initTimeRemainder = 100;\n    this.playTimes = 5;\n    this.requiredNumberProducts = 0;\n    this.maxRequiredProducts = 5;\n    this.answerDone = false;\n    this.timeStepDenominator = 10;\n    this.gameTime = {\n      timerInterval: null,\n      timeRemainder: this.initTimeRemainder,\n      timeStep: this.initTimeRemainder / 10\n    };\n    this.gameSound = {\n      audioBackground: audioAssetsPath + \"bg_sound.mp3\",\n      // Âm thanh nền\n      audioFail: audioAssetsPath + \"wrong.mp3\",\n      // Âm thanh khi chọn sai\n      maxVolume: 1,\n      audioRatio: 1\n    };\n  }\n\n  // Lấy ngẫu nhiên tên sản phẩm đúng\n  getRandomNameCorrect() {\n    const randomIndex = Math.floor(Math.random() * this.listProductNames.length);\n    return this.listProductNames[randomIndex];\n  }\n\n  // Hiển thị modal đếm ngược\n  showCountdownModal() {\n    const getCountDownModalText = $('.modal-count-down h1');\n    const initCountDownTime = 3;\n    getCountDownModalText.text(initCountDownTime);\n    let countDownTime = initCountDownTime;\n    const intervalId = setInterval(() => {\n      countDownTime -= 1;\n      getCountDownModalText.text(countDownTime.toString());\n      if (countDownTime === 0) {\n        clearInterval(intervalId);\n        $('.modal-count-down').hide(() => {\n          // Sau khi modal-count-down ẩn đi mới hiển thị game-content\n          $('.game-content').css(\"display\", \"flex\");\n          this.showCountdownTime();\n        });\n      }\n    }, 1000);\n  }\n\n  // Hiển thị tên sản phẩm đúng ngẫu nhiên\n  showRandomNameCorrect() {\n    const nameCorrectElements = $('.name-correct');\n    nameCorrectElements.css('display', 'none');\n    const randomIndex = Math.floor(Math.random() * nameCorrectElements.length);\n    const maxRequiredProducts = this.maxRequiredProducts;\n    nameCorrectElements.eq(randomIndex).css('display', 'block');\n\n    // Hiển thị hình ảnh tương ứng với tên sản phẩm đúng\n    $.each($('.character-card-list > div img:first-child'), (i, item) => {\n      $(item).css('display', i === randomIndex ? 'none' : 'block');\n    });\n    $.each($('.character-card-list > div img:nth-child(2)'), (i, item) => {\n      $(item).css('display', i === randomIndex ? 'block' : 'none');\n    });\n    const numberCorrect = nameCorrectElements.eq(randomIndex).find(\".name-correct-number\");\n    const descCorrect = nameCorrectElements.eq(randomIndex).find(\".name-correct-desc\");\n\n    // Đặt số lượng tên sản phẩm cần chọn và mô tả sản phẩm đúng\n    const randomNumber = Math.floor(Math.random() * this.maxRequiredProducts) + 1;\n    numberCorrect.text(randomNumber);\n    this.requiredNumberProducts = randomNumber;\n    const randomDesc = this.getRandomNameCorrect();\n    descCorrect.text(randomDesc);\n  }\n\n  // Lấy phản hồi khi người chơi chọn\n  getAnswer() {\n    $('.product-card').off('click').on('click', event => {\n      const productCard = $(event.currentTarget);\n      const requireProduct = $('.name-correct-desc').text();\n      const productTitle = productCard.find('.product-card-name').text().toLowerCase();\n\n      // Xử lý khi người chơi chọn đúng hoặc sai\n      if (productTitle === requireProduct) {\n        this.handleCorrectAnswer(productCard);\n      } else {\n        this.handleIncorrectAnswer();\n      }\n    });\n  }\n\n  // Xử lý khi người chơi chọn đúng\n  handleCorrectAnswer(productCard) {\n    // Tăng số lượng sản phẩm đúng đã chọn và hiển thị lên giao diện\n    const numberCorrectElement = productCard.find('.number-correct span:last-child');\n    const newValue = Number(numberCorrectElement.text()) + 1;\n    numberCorrectElement.text(newValue);\n    productCard.find('.number-correct').css(\"display\", \"flex\");\n\n    // Kiểm tra nếu người chơi chọn quá số lượng yêu cầu\n    if (newValue > this.requiredNumberProducts) {\n      console.log('You choosed over quantity!');\n      this.showGameOver(); // Hiển thị màn hình kết thúc game\n    } else if (newValue === this.requiredNumberProducts) {\n      console.log('You choosed correct');\n      setTimeout(() => {\n        this.resetAnswer(); // Đặt lại câu trả lời và chuẩn bị cho câu hỏi tiếp theo\n        this.showRandomNameCorrect(); // Hiển thị tên sản phẩm đúng ngẫu nhiên mới\n        this.showScoreCalculator(); // Cập nhật điểm số của người chơi\n        this.getAnswer(); // Lấy phản hồi từ người chơi cho câu hỏi mới\n        this.showCountdownTime(); // Hiển thị thanh đếm ngược\n      }, 300);\n    }\n  }\n\n  // Xử lý khi người chơi chọn sai\n  handleIncorrectAnswer() {\n    console.log('You choosed incorrect!');\n    $(\".audio-background\").get(0).pause(); // Tạm dừng âm thanh nền\n    this.showGameOver();\n    this.playSoundGameOver();\n  }\n\n  // Đặt lại câu trả lời\n  resetAnswer() {\n    $('.number-correct span:last-child').text('0');\n    $('.name-correct-desc').text('');\n    $('.number-correct').css('display', 'none');\n    clearInterval(this.gameTime.timerInterval);\n    this.gameTime.timeRemainder = this.initTimeRemainder;\n    $(\".timer-range\").css(\"width\", this.gameTime.timeRemainder + \"%\");\n  }\n\n  // Hiển thị bảng tính điểm\n  showScoreCalculator() {\n    // Lấy phần tử hiển thị điểm số hiện tại\n    const currentScoreElement = $('.current-score');\n    // Lấy giá trị điểm số hiện tại từ phần tử, nếu không có thì mặc định là 0\n    let currentScore = parseInt(currentScoreElement.text(), 10) || 0;\n    // Tăng điểm số hiện tại lên 1 đơn vị\n    currentScore++;\n    // Hiển thị điểm số mới lên giao diện\n    currentScoreElement.text(currentScore);\n    // Cập nhật cấp độ game sau khi tăng điểm\n    this.updateGameLevel();\n  }\n\n  // Cập nhật cấp độ game\n  updateGameLevel() {\n    // Lấy điểm số hiện tại từ phần tử DOM\n    const currentScore = parseInt($('.current-score').text());\n    // Lấy phần tử hiển thị cấp độ từ DOM\n    const levelElement = $('#level');\n    // Lấy giá trị cấp độ hiện tại từ phần tử DOM\n    let currentLevel = parseInt(levelElement.text());\n\n    // Kiểm tra nếu điểm số chia hết cho 3 và lớn hơn 0\n    if (currentScore % 3 === 0 && currentScore > 0) {\n      // Tăng cấp độ hiện tại lên 1\n      currentLevel++;\n      // Hiển thị cấp độ mới lên giao diện\n      levelElement.text(currentLevel);\n\n      // Cập nhật timeStepDenominator từ levels\n      const levelData = this.levels.find(level => level.level === currentLevel);\n      if (levelData) {\n        this.timeStepDenominator = levelData.timeStepPercentage;\n        this.gameTime.timeStep = this.initTimeRemainder / (100 / this.timeStepDenominator);\n      }\n\n      // Tăng tốc độ phát âm thanh nền\n      this.gameSound.audioRatio += 0.1;\n      // Đặt lại tốc độ phát âm thanh nền mới\n      this.playbackRateAudioBackground(this.gameSound.audioRatio);\n    }\n  }\n\n  // Hiển thị thanh đếm ngược\n  showCountdownTime() {\n    let timeRemainder = this.initTimeRemainder;\n    const timeStep = this.gameTime.timeStep;\n    const rangeBar = $('.timer-range');\n    rangeBar.css(\"width\", timeRemainder + \"%\");\n    this.gameTime.timerInterval = setInterval(() => {\n      timeRemainder -= timeStep;\n      rangeBar.css(\"width\", timeRemainder + \"%\");\n      if (timeRemainder <= 0) {\n        clearInterval(this.gameTime.timerInterval);\n        this.showGameOver();\n        this.playSoundGameOver();\n      }\n    }, 1000);\n  }\n\n  // Hiển thị màn hình kết thúc game\n  showGameOver() {\n    clearInterval(this.gameTime.timerInterval);\n    $('.false-clicked-modal').css(\"display\", \"flex\");\n    setTimeout(() => {\n      this.showResultGame();\n    }, 3000);\n  }\n\n  // clearGame() {\n  //     // Đặt lại điểm số về 0\n  //     $('.current-score').text('0');\n\n  //     // Đặt lại thời gian bắt đầu về giá trị ban đầu\n  //     this.gameTime.timeRemainder = this.initTimeRemainder;\n  //     $(\".timer-range\").css(\"width\", this.gameTime.timeRemainder + \"%\");\n  // }\n\n  // Hiển thị kết quả cuối cùng của game\n  showResultGame() {\n    $('.false-clicked-modal').css(\"display\", \"none\");\n    $('#result-game').load('./view/result-game.html', () => {\n      const setScoreTotal = $('.final-score-text');\n      const getCurrentScore = $('.current-score');\n      const score = getCurrentScore.text();\n      setScoreTotal.text(score);\n\n      // Sự kiện nút chơi lại game\n      $('.restart-game-text').on('click', () => {\n        $('.modal-result-game').hide(() => {\n          // Ẩn modal kết quả game\n\n          // $('#count-down').load('/view/count-down.html', () => {\n          // $('.game-content').css(\"display\", \"none\");\n          //     // Load lại phần nội dung của modal đếm ngược\n          //     $('#count-down').css(\"display\", \"block\");\n          //     const game = new playGame(); // Tạo lại đối tượng game\n          //     game.showCountdownModal(); // Hiển thị modal đếm ngược\n\n          // });\n          location.reload();\n        });\n\n        // this.clearGame();\n      });\n\n      // Sự kiện nút đóng màn hình kết quả\n      $('.result-game-button-close').on('click', () => {\n        // Ẩn modal kết quả game\n        $('.modal-result-game').hide();\n\n        // Khóa tất cả các action links trừ các liên kết có class \"header-site\"\n        // $('.game-content').not('.header-site').each(function() {\n        //     $(this).css('pointer-events', 'none'); // Vô hiệu hóa sự kiện click\n        //     $(this).addClass('disabled-link'); // Thêm class để hiển thị trạng thái vô hiệu hóa nếu cần\n        // });\n      });\n      $('.modal-result-game').css(\"display\", \"flex\");\n    });\n  }\n  // Function to play background sound\n  playSoundBackground() {\n    const $audioBackgroundElement = $('.audio-background'); // Lấy phần tử âm thanh nền\n    if ($audioBackgroundElement.length > 0) {\n      // Ensure play is triggered by a user interaction\n      document.addEventListener('click', () => {\n        $audioBackgroundElement[0].play().catch(error => {\n          console.error('Audio play failed:', error);\n        });\n      }, {\n        once: true\n      });\n    }\n  }\n\n  // Phát âm thanh khi game over\n  playSoundGameOver() {\n    const $audioFailElement = $('.audio-fail');\n    $audioFailElement[0].play();\n  }\n\n  // Cập nhật cấp độ game\n  // updateGameLevel() {\n  //     // Lấy điểm số hiện tại từ phần tử DOM\n  //     const currentScore = parseInt($('.current-score').text());\n  //     // Lấy phần tử hiển thị cấp độ từ DOM\n  //     const levelElement = $('#level');\n  //     // Lấy giá trị cấp độ hiện tại từ phần tử DOM\n  //     let currentLevel = parseInt(levelElement.text());\n\n  //     // Kiểm tra nếu điểm số chia hết cho 3 và lớn hơn 0\n  //     if (currentScore % 3 === 0 && currentScore > 0) {\n  //         // Tăng cấp độ hiện tại lên 1\n  //         currentLevel++;\n  //         // Hiển thị cấp độ mới lên giao diện\n  //         levelElement.text(currentLevel);\n\n  //         // Tăng thêm giá trị cho biến điều khiển thời gian\n  //         this.timeStepDenominator += 3;\n  //         // Cập nhật thời gian bước game\n  //         this.gameTime.timeStep = this.initTimeRemainder / this.timeStepDenominator;\n\n  //         // Tăng tốc độ phát âm thanh nền\n  //         this.gameSound.audioRatio += 0.1;\n  //         // Đặt lại tốc độ phát âm thanh nền mới\n  //         this.playbackRateAudioBackground(this.gameSound.audioRatio);\n  //     }\n  // }\n\n  // Đặt tốc độ phát của âm thanh nền\n  playbackRateAudioBackground(rate) {\n    const $audioBackgroundElement = $('.audio-background');\n    $audioBackgroundElement[0].playbackRate = rate;\n  }\n}\n\n// Sự kiện khi tài liệu đã sẵn sàng\n$(document).ready(() => {\n  const game = new playGame(); // Tạo ra một đối tượng trò chơi mới\n  game.showCountdownModal(); // Hiển thị modal đếm ngược\n  game.showRandomNameCorrect(); // Hiển thị tên sản phẩm đúng ngẫu nhiên\n  game.getAnswer(); // Lấy phản hồi từ người chơi\n  game.playSoundBackground(); // Phát âm thanh nền\n});","map":{"version":3,"names":["audioAssetsPath","viewAssetsPath","playGame","constructor","initGameData","loadData","initGameVariables","listProducts","listCharacters","listProductNames","levels","timeStepPercentage","$","getJSON","data","processData","document","trigger","products","characters","listName","fail","jqXHR","textStatus","errorThrown","console","error","productsAssetsPath","charactersAssetsPath","Array","isArray","map","product","url","title","toLowerCase","character","activeUrl","initTimeRemainder","playTimes","requiredNumberProducts","maxRequiredProducts","answerDone","timeStepDenominator","gameTime","timerInterval","timeRemainder","timeStep","gameSound","audioBackground","audioFail","maxVolume","audioRatio","getRandomNameCorrect","randomIndex","Math","floor","random","length","showCountdownModal","getCountDownModalText","initCountDownTime","text","countDownTime","intervalId","setInterval","toString","clearInterval","hide","css","showCountdownTime","showRandomNameCorrect","nameCorrectElements","eq","each","i","item","numberCorrect","find","descCorrect","randomNumber","randomDesc","getAnswer","off","on","event","productCard","currentTarget","requireProduct","productTitle","handleCorrectAnswer","handleIncorrectAnswer","numberCorrectElement","newValue","Number","log","showGameOver","setTimeout","resetAnswer","showScoreCalculator","get","pause","playSoundGameOver","currentScoreElement","currentScore","parseInt","updateGameLevel","levelElement","currentLevel","levelData","level","playbackRateAudioBackground","rangeBar","showResultGame","load","setScoreTotal","getCurrentScore","score","location","reload","playSoundBackground","$audioBackgroundElement","addEventListener","play","catch","once","$audioFailElement","rate","playbackRate","ready","game"],"sources":["C:/Users/Admin/OneDrive/Máy tính/minigame-react/src/assets/js/game.js"],"sourcesContent":["\r\nconst audioAssetsPath = \"assets/music/\";\r\nconst viewAssetsPath = \"view/\";\r\n\r\nclass playGame {\r\n    constructor() {\r\n        // Khởi tạo dữ liệu game\r\n        this.initGameData();\r\n        // Tải dữ liệu từ JSON\r\n        this.loadData();\r\n        // Khởi tạo các biến game\r\n        this.initGameVariables();\r\n    }\r\n\r\n    // Khởi tạo dữ liệu game\r\n    initGameData() {\r\n        this.listProducts = []; \r\n        this.listCharacters = []; \r\n        this.listProductNames = []; \r\n        this.levels = [];\r\n        this.timeStepPercentage = [];\r\n    }\r\n\r\n    // Tải dữ liệu từ file JSON\r\n    loadData() {\r\n        $.getJSON('assets/data.json', (data) => {\r\n            // Xử lý dữ liệu sau khi tải\r\n            this.processData(data);\r\n            // Kích hoạt sự kiện 'dataLoaded' khi dữ liệu đã được tải\r\n            $(document).trigger('dataLoaded', {\r\n                products: this.listProducts,\r\n                characters: this.listCharacters,\r\n                listName: this.listProductNames,\r\n                timeStepPercentage: this.timeStepPercentage,\r\n                levels: this.levels\r\n            });\r\n        })\r\n            .fail((jqXHR, textStatus, errorThrown) => {\r\n                console.error('Error fetching data:', errorThrown); // Báo lỗi nếu có lỗi khi tải dữ liệu\r\n            });\r\n    }\r\n\r\n    // Xử lý dữ liệu sau khi tải\r\n    processData(data) {\r\n        const productsAssetsPath = data.productsAssetsPath;\r\n        const charactersAssetsPath = data.charactersAssetsPath;\r\n\r\n        if (data && data.products && Array.isArray(data.products)) {\r\n            this.listProducts = data.products.map(product => ({\r\n                ...product,\r\n                url: productsAssetsPath + product.url\r\n            }));\r\n            this.listProductNames = this.listProducts.map(product => product.title.toLowerCase());\r\n        } else {\r\n            console.error('Invalid product data format');\r\n        }\r\n\r\n        if (data && data.characters && Array.isArray(data.characters)) {\r\n            this.listCharacters = data.characters.map(character => ({\r\n                ...character,\r\n                url: charactersAssetsPath + character.url,\r\n                activeUrl: charactersAssetsPath + character.activeUrl\r\n            }));\r\n        } else {\r\n            console.error('Invalid character data format');\r\n        }\r\n        if (data && data.levels && Array.isArray(data.levels)) {\r\n            this.levels = data.levels;\r\n        } else {\r\n            console.error('Invalid levels data format');\r\n        }\r\n    }\r\n\r\n    // Khởi tạo các biến game\r\n    initGameVariables() {\r\n        this.initTimeRemainder = 100;\r\n        this.playTimes = 5;\r\n        this.requiredNumberProducts = 0;\r\n        this.maxRequiredProducts = 5;\r\n        this.answerDone = false;\r\n        this.timeStepDenominator = 10;\r\n\r\n        this.gameTime = {\r\n            timerInterval: null,\r\n            timeRemainder: this.initTimeRemainder,\r\n            timeStep: this.initTimeRemainder / 10,\r\n        };\r\n\r\n        this.gameSound = {\r\n            audioBackground: audioAssetsPath + \"bg_sound.mp3\", // Âm thanh nền\r\n            audioFail: audioAssetsPath + \"wrong.mp3\", // Âm thanh khi chọn sai\r\n            maxVolume: 1,\r\n            audioRatio: 1,\r\n        };\r\n    }\r\n\r\n    // Lấy ngẫu nhiên tên sản phẩm đúng\r\n    getRandomNameCorrect() {\r\n        const randomIndex = Math.floor(Math.random() * this.listProductNames.length);\r\n        return this.listProductNames[randomIndex];\r\n    }\r\n\r\n    // Hiển thị modal đếm ngược\r\n    showCountdownModal() {\r\n        const getCountDownModalText = $('.modal-count-down h1');\r\n        const initCountDownTime = 3;\r\n        getCountDownModalText.text(initCountDownTime);\r\n        let countDownTime = initCountDownTime;\r\n\r\n        const intervalId = setInterval(() => {\r\n            countDownTime -= 1;\r\n            getCountDownModalText.text(countDownTime.toString());\r\n            if (countDownTime === 0) {\r\n                clearInterval(intervalId);\r\n                $('.modal-count-down').hide(() => {\r\n                    // Sau khi modal-count-down ẩn đi mới hiển thị game-content\r\n                    $('.game-content').css(\"display\", \"flex\");\r\n                    this.showCountdownTime();\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    // Hiển thị tên sản phẩm đúng ngẫu nhiên\r\n    showRandomNameCorrect() {\r\n        const nameCorrectElements = $('.name-correct');\r\n        nameCorrectElements.css('display', 'none');\r\n\r\n        const randomIndex = Math.floor(Math.random() * nameCorrectElements.length);\r\n        const maxRequiredProducts = this.maxRequiredProducts;\r\n        nameCorrectElements.eq(randomIndex).css('display', 'block');\r\n\r\n        // Hiển thị hình ảnh tương ứng với tên sản phẩm đúng\r\n        $.each($('.character-card-list > div img:first-child'), (i, item) => {\r\n            $(item).css('display', i === randomIndex ? 'none' : 'block');\r\n        });\r\n\r\n        $.each($('.character-card-list > div img:nth-child(2)'), (i, item) => {\r\n            $(item).css('display', i === randomIndex ? 'block' : 'none');\r\n        });\r\n\r\n        const numberCorrect = nameCorrectElements.eq(randomIndex).find(\".name-correct-number\");\r\n        const descCorrect = nameCorrectElements.eq(randomIndex).find(\".name-correct-desc\");\r\n\r\n        // Đặt số lượng tên sản phẩm cần chọn và mô tả sản phẩm đúng\r\n        const randomNumber = Math.floor(Math.random() * this.maxRequiredProducts) + 1;\r\n        numberCorrect.text(randomNumber);\r\n        this.requiredNumberProducts = randomNumber;\r\n\r\n        const randomDesc = this.getRandomNameCorrect();\r\n        descCorrect.text(randomDesc);\r\n    }\r\n\r\n    // Lấy phản hồi khi người chơi chọn\r\n    getAnswer() {\r\n        $('.product-card').off('click').on('click', (event) => {\r\n            const productCard = $(event.currentTarget);\r\n            const requireProduct = $('.name-correct-desc').text();\r\n            const productTitle = productCard.find('.product-card-name').text().toLowerCase();\r\n\r\n            // Xử lý khi người chơi chọn đúng hoặc sai\r\n            if (productTitle === requireProduct) {\r\n                this.handleCorrectAnswer(productCard);\r\n            } else {\r\n                this.handleIncorrectAnswer();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Xử lý khi người chơi chọn đúng\r\n    handleCorrectAnswer(productCard) {\r\n        // Tăng số lượng sản phẩm đúng đã chọn và hiển thị lên giao diện\r\n        const numberCorrectElement = productCard.find('.number-correct span:last-child');\r\n        const newValue = Number(numberCorrectElement.text()) + 1;\r\n        numberCorrectElement.text(newValue);\r\n        productCard.find('.number-correct').css(\"display\", \"flex\");\r\n\r\n        // Kiểm tra nếu người chơi chọn quá số lượng yêu cầu\r\n        if (newValue > this.requiredNumberProducts) {\r\n            console.log('You choosed over quantity!');\r\n            this.showGameOver(); // Hiển thị màn hình kết thúc game\r\n        } else if (newValue === this.requiredNumberProducts) {\r\n            console.log('You choosed correct');\r\n            setTimeout(() => {\r\n                this.resetAnswer(); // Đặt lại câu trả lời và chuẩn bị cho câu hỏi tiếp theo\r\n                this.showRandomNameCorrect(); // Hiển thị tên sản phẩm đúng ngẫu nhiên mới\r\n                this.showScoreCalculator(); // Cập nhật điểm số của người chơi\r\n                this.getAnswer(); // Lấy phản hồi từ người chơi cho câu hỏi mới\r\n                this.showCountdownTime(); // Hiển thị thanh đếm ngược\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n\r\n    // Xử lý khi người chơi chọn sai\r\n    handleIncorrectAnswer() {\r\n        console.log('You choosed incorrect!');\r\n        $(\".audio-background\").get(0).pause(); // Tạm dừng âm thanh nền\r\n        this.showGameOver();\r\n        this.playSoundGameOver();\r\n    }\r\n\r\n    // Đặt lại câu trả lời\r\n    resetAnswer() {\r\n        $('.number-correct span:last-child').text('0');\r\n        $('.name-correct-desc').text('');\r\n        $('.number-correct').css('display', 'none');\r\n        clearInterval(this.gameTime.timerInterval);\r\n        this.gameTime.timeRemainder = this.initTimeRemainder;\r\n        $(\".timer-range\").css(\"width\", this.gameTime.timeRemainder + \"%\");\r\n    }\r\n\r\n    // Hiển thị bảng tính điểm\r\n    showScoreCalculator() {\r\n        // Lấy phần tử hiển thị điểm số hiện tại\r\n        const currentScoreElement = $('.current-score');\r\n        // Lấy giá trị điểm số hiện tại từ phần tử, nếu không có thì mặc định là 0\r\n        let currentScore = parseInt(currentScoreElement.text(), 10) || 0;\r\n        // Tăng điểm số hiện tại lên 1 đơn vị\r\n        currentScore++;\r\n        // Hiển thị điểm số mới lên giao diện\r\n        currentScoreElement.text(currentScore);\r\n        // Cập nhật cấp độ game sau khi tăng điểm\r\n        this.updateGameLevel();\r\n    }\r\n\r\n    // Cập nhật cấp độ game\r\n    updateGameLevel() {\r\n        // Lấy điểm số hiện tại từ phần tử DOM\r\n        const currentScore = parseInt($('.current-score').text());\r\n        // Lấy phần tử hiển thị cấp độ từ DOM\r\n        const levelElement = $('#level');\r\n        // Lấy giá trị cấp độ hiện tại từ phần tử DOM\r\n        let currentLevel = parseInt(levelElement.text());\r\n\r\n        // Kiểm tra nếu điểm số chia hết cho 3 và lớn hơn 0\r\n        if (currentScore % 3 === 0 && currentScore > 0) {\r\n            // Tăng cấp độ hiện tại lên 1\r\n            currentLevel++;\r\n            // Hiển thị cấp độ mới lên giao diện\r\n            levelElement.text(currentLevel);\r\n\r\n            // Cập nhật timeStepDenominator từ levels\r\n            const levelData = this.levels.find(level => level.level === currentLevel);\r\n            if (levelData) {\r\n                this.timeStepDenominator = levelData.timeStepPercentage;\r\n                this.gameTime.timeStep = this.initTimeRemainder / (100 / this.timeStepDenominator);\r\n            }\r\n\r\n            // Tăng tốc độ phát âm thanh nền\r\n            this.gameSound.audioRatio += 0.1;\r\n            // Đặt lại tốc độ phát âm thanh nền mới\r\n            this.playbackRateAudioBackground(this.gameSound.audioRatio);\r\n        }\r\n    }\r\n\r\n    // Hiển thị thanh đếm ngược\r\n    showCountdownTime() {\r\n        let timeRemainder = this.initTimeRemainder;\r\n        const timeStep = this.gameTime.timeStep;\r\n        const rangeBar = $('.timer-range');\r\n        rangeBar.css(\"width\", timeRemainder + \"%\");\r\n\r\n        this.gameTime.timerInterval = setInterval(() => {\r\n            timeRemainder -= timeStep;\r\n            rangeBar.css(\"width\", timeRemainder + \"%\");\r\n            if (timeRemainder <= 0) {\r\n                clearInterval(this.gameTime.timerInterval);\r\n                this.showGameOver();\r\n                this.playSoundGameOver();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    // Hiển thị màn hình kết thúc game\r\n    showGameOver() {\r\n        clearInterval(this.gameTime.timerInterval);\r\n        $('.false-clicked-modal').css(\"display\", \"flex\");\r\n\r\n        setTimeout(() => {\r\n            this.showResultGame();\r\n        }, 3000);\r\n    }\r\n\r\n    // clearGame() {\r\n    //     // Đặt lại điểm số về 0\r\n    //     $('.current-score').text('0');\r\n    \r\n    //     // Đặt lại thời gian bắt đầu về giá trị ban đầu\r\n    //     this.gameTime.timeRemainder = this.initTimeRemainder;\r\n    //     $(\".timer-range\").css(\"width\", this.gameTime.timeRemainder + \"%\");\r\n    // }\r\n    \r\n    \r\n\r\n    // Hiển thị kết quả cuối cùng của game\r\n    showResultGame() {\r\n        $('.false-clicked-modal').css(\"display\", \"none\");\r\n        $('#result-game').load('./view/result-game.html', () => {\r\n            const setScoreTotal = $('.final-score-text');\r\n            const getCurrentScore = $('.current-score');\r\n            const score = getCurrentScore.text();\r\n            setScoreTotal.text(score);\r\n\r\n            // Sự kiện nút chơi lại game\r\n            $('.restart-game-text').on('click', () => {\r\n                $('.modal-result-game').hide(() => {\r\n                    // Ẩn modal kết quả game\r\n                    \r\n                    // $('#count-down').load('/view/count-down.html', () => {\r\n                    // $('.game-content').css(\"display\", \"none\");\r\n                    //     // Load lại phần nội dung của modal đếm ngược\r\n                    //     $('#count-down').css(\"display\", \"block\");\r\n                    //     const game = new playGame(); // Tạo lại đối tượng game\r\n                    //     game.showCountdownModal(); // Hiển thị modal đếm ngược\r\n                        \r\n                    // });\r\n                    location.reload();\r\n                });\r\n                \r\n                // this.clearGame();\r\n            });\r\n\r\n            // Sự kiện nút đóng màn hình kết quả\r\n$('.result-game-button-close').on('click', () => {\r\n    // Ẩn modal kết quả game\r\n    $('.modal-result-game').hide();\r\n    \r\n    // Khóa tất cả các action links trừ các liên kết có class \"header-site\"\r\n    // $('.game-content').not('.header-site').each(function() {\r\n    //     $(this).css('pointer-events', 'none'); // Vô hiệu hóa sự kiện click\r\n    //     $(this).addClass('disabled-link'); // Thêm class để hiển thị trạng thái vô hiệu hóa nếu cần\r\n    // });\r\n});\r\n\r\n\r\n            $('.modal-result-game').css(\"display\", \"flex\");\r\n        });\r\n    }\r\n    // Function to play background sound\r\n    playSoundBackground() {\r\n        const $audioBackgroundElement = $('.audio-background'); // Lấy phần tử âm thanh nền\r\n        if ($audioBackgroundElement.length > 0) {\r\n            // Ensure play is triggered by a user interaction\r\n            document.addEventListener('click', () => {\r\n                $audioBackgroundElement[0].play().catch(error => {\r\n                    console.error('Audio play failed:', error);\r\n                });\r\n            }, { once: true });\r\n        }\r\n    }\r\n\r\n    // Phát âm thanh khi game over\r\n    playSoundGameOver() {\r\n        const $audioFailElement = $('.audio-fail');\r\n        $audioFailElement[0].play();\r\n    }\r\n\r\n    // Cập nhật cấp độ game\r\n    // updateGameLevel() {\r\n    //     // Lấy điểm số hiện tại từ phần tử DOM\r\n    //     const currentScore = parseInt($('.current-score').text());\r\n    //     // Lấy phần tử hiển thị cấp độ từ DOM\r\n    //     const levelElement = $('#level');\r\n    //     // Lấy giá trị cấp độ hiện tại từ phần tử DOM\r\n    //     let currentLevel = parseInt(levelElement.text());\r\n\r\n    //     // Kiểm tra nếu điểm số chia hết cho 3 và lớn hơn 0\r\n    //     if (currentScore % 3 === 0 && currentScore > 0) {\r\n    //         // Tăng cấp độ hiện tại lên 1\r\n    //         currentLevel++;\r\n    //         // Hiển thị cấp độ mới lên giao diện\r\n    //         levelElement.text(currentLevel);\r\n\r\n    //         // Tăng thêm giá trị cho biến điều khiển thời gian\r\n    //         this.timeStepDenominator += 3;\r\n    //         // Cập nhật thời gian bước game\r\n    //         this.gameTime.timeStep = this.initTimeRemainder / this.timeStepDenominator;\r\n\r\n    //         // Tăng tốc độ phát âm thanh nền\r\n    //         this.gameSound.audioRatio += 0.1;\r\n    //         // Đặt lại tốc độ phát âm thanh nền mới\r\n    //         this.playbackRateAudioBackground(this.gameSound.audioRatio);\r\n    //     }\r\n    // }\r\n\r\n\r\n    // Đặt tốc độ phát của âm thanh nền\r\n    playbackRateAudioBackground(rate) {\r\n        const $audioBackgroundElement = $('.audio-background');\r\n        $audioBackgroundElement[0].playbackRate = rate;\r\n    }\r\n}\r\n\r\n// Sự kiện khi tài liệu đã sẵn sàng\r\n$(document).ready(() => {\r\n    const game = new playGame(); // Tạo ra một đối tượng trò chơi mới\r\n    game.showCountdownModal(); // Hiển thị modal đếm ngược\r\n    game.showRandomNameCorrect(); // Hiển thị tên sản phẩm đúng ngẫu nhiên\r\n    game.getAnswer(); // Lấy phản hồi từ người chơi\r\n    game.playSoundBackground(); // Phát âm thanh nền\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}