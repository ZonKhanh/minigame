{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst gameContentModalSlice = createSlice({\n  name: 'gameContentModal',\n  initialState: {\n    showGameContent: false,\n    listProducts: [],\n    listCharacters: [],\n    nameCorrectIndex: null,\n    requiredNumberProducts: 0,\n    randomNameCorrect: ''\n  },\n  reducers: {\n    toggleGameContent(state, action) {\n      state.showGameContent = action.payload;\n    },\n    setGameData(state, action) {\n      state.listProducts = action.payload.products;\n      state.listCharacters = action.payload.characters;\n      state.levels = action.payload.levels;\n    },\n    showRandomNameCorrect(state) {\n      var _state$listProducts$r, _state$listProducts$;\n      const maxRequiredProducts = 5;\n      let randomIndex;\n      if (state.nameCorrectIndex !== undefined) {\n        do {\n          randomIndex = Math.floor(Math.random() * state.listProducts.length);\n        } while (randomIndex === state.nameCorrectIndex);\n      } else {\n        randomIndex = Math.floor(Math.random() * state.listProducts.length);\n      }\n      state.nameCorrectIndex = randomIndex;\n      state.requiredNumberProducts = Math.floor(Math.random() * maxRequiredProducts) + 1;\n      state.randomNameCorrect = ((_state$listProducts$r = state.listProducts[randomIndex]) === null || _state$listProducts$r === void 0 ? void 0 : _state$listProducts$r.title) || ((_state$listProducts$ = state.listProducts[0]) === null || _state$listProducts$ === void 0 ? void 0 : _state$listProducts$.title) || '';\n      state.nameCorrectIndex = randomIndex;\n    }\n  }\n});\nexport const {\n  toggleGameContent,\n  setGameData,\n  showRandomNameCorrect\n} = gameContentModalSlice.actions;\nexport default gameContentModalSlice.reducer;","map":{"version":3,"names":["createSlice","gameContentModalSlice","name","initialState","showGameContent","listProducts","listCharacters","nameCorrectIndex","requiredNumberProducts","randomNameCorrect","reducers","toggleGameContent","state","action","payload","setGameData","products","characters","levels","showRandomNameCorrect","_state$listProducts$r","_state$listProducts$","maxRequiredProducts","randomIndex","undefined","Math","floor","random","length","title","actions","reducer"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/backup/minigame-react/src/components/GameContentModal/GameContentModalSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst gameContentModalSlice = createSlice({\r\n  name: 'gameContentModal',\r\n  initialState: {\r\n    showGameContent: false,\r\n    listProducts: [],\r\n    listCharacters: [],\r\n    nameCorrectIndex: null,\r\n    requiredNumberProducts: 0,\r\n    randomNameCorrect: '',\r\n  },\r\n  reducers: {\r\n    toggleGameContent(state, action) {\r\n      state.showGameContent = action.payload;\r\n    },\r\n    setGameData(state, action) {\r\n      state.listProducts = action.payload.products;\r\n      state.listCharacters = action.payload.characters;\r\n      state.levels = action.payload.levels;\r\n    },\r\n    showRandomNameCorrect(state) {\r\n      const maxRequiredProducts = 5;\r\n      let randomIndex;\r\n\r\n      if (state.nameCorrectIndex !== undefined) {\r\n        do {\r\n          randomIndex = Math.floor(Math.random() * state.listProducts.length);\r\n        } while (randomIndex === state.nameCorrectIndex);\r\n      } else {\r\n        randomIndex = Math.floor(Math.random() * state.listProducts.length);\r\n      }\r\n\r\n      state.nameCorrectIndex = randomIndex;\r\n      state.requiredNumberProducts = Math.floor(Math.random() * maxRequiredProducts) + 1;\r\n      state.randomNameCorrect = state.listProducts[randomIndex]?.title || state.listProducts[0]?.title || '';\r\n\r\n      state.nameCorrectIndex = randomIndex;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleGameContent, setGameData, showRandomNameCorrect } = gameContentModalSlice.actions;\r\n\r\nexport default gameContentModalSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,qBAAqB,GAAGD,WAAW,CAAC;EACxCE,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE;IACZC,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,gBAAgB,EAAE,IAAI;IACtBC,sBAAsB,EAAE,CAAC;IACzBC,iBAAiB,EAAE;EACrB,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC/BD,KAAK,CAACR,eAAe,GAAGS,MAAM,CAACC,OAAO;IACxC,CAAC;IACDC,WAAWA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACP,YAAY,GAAGQ,MAAM,CAACC,OAAO,CAACE,QAAQ;MAC5CJ,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACC,OAAO,CAACG,UAAU;MAChDL,KAAK,CAACM,MAAM,GAAGL,MAAM,CAACC,OAAO,CAACI,MAAM;IACtC,CAAC;IACDC,qBAAqBA,CAACP,KAAK,EAAE;MAAA,IAAAQ,qBAAA,EAAAC,oBAAA;MAC3B,MAAMC,mBAAmB,GAAG,CAAC;MAC7B,IAAIC,WAAW;MAEf,IAAIX,KAAK,CAACL,gBAAgB,KAAKiB,SAAS,EAAE;QACxC,GAAG;UACDD,WAAW,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,KAAK,CAACP,YAAY,CAACuB,MAAM,CAAC;QACrE,CAAC,QAAQL,WAAW,KAAKX,KAAK,CAACL,gBAAgB;MACjD,CAAC,MAAM;QACLgB,WAAW,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,KAAK,CAACP,YAAY,CAACuB,MAAM,CAAC;MACrE;MAEAhB,KAAK,CAACL,gBAAgB,GAAGgB,WAAW;MACpCX,KAAK,CAACJ,sBAAsB,GAAGiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,mBAAmB,CAAC,GAAG,CAAC;MAClFV,KAAK,CAACH,iBAAiB,GAAG,EAAAW,qBAAA,GAAAR,KAAK,CAACP,YAAY,CAACkB,WAAW,CAAC,cAAAH,qBAAA,uBAA/BA,qBAAA,CAAiCS,KAAK,OAAAR,oBAAA,GAAIT,KAAK,CAACP,YAAY,CAAC,CAAC,CAAC,cAAAgB,oBAAA,uBAArBA,oBAAA,CAAuBQ,KAAK,KAAI,EAAE;MAEtGjB,KAAK,CAACL,gBAAgB,GAAGgB,WAAW;IACtC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,iBAAiB;EAAEI,WAAW;EAAEI;AAAsB,CAAC,GAAGlB,qBAAqB,CAAC6B,OAAO;AAEtG,eAAe7B,qBAAqB,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}