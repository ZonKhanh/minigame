{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState: {\n    listProducts: [],\n    listCharacters: [],\n    listProductNames: [],\n    levels: [],\n    timeStepPercentage: [],\n    initTimeRemainder: 100,\n    playTimes: 5,\n    requiredNumberProducts: 0,\n    maxRequiredProducts: 5,\n    answerDone: false,\n    timeStepDenominator: 10,\n    gameTime: {\n      timerInterval: null,\n      timeRemainder: 100,\n      timeStep: 10\n    },\n    gameSound: {\n      audioBackground: \"assets/music/bg_sound.mp3\",\n      audioFail: \"assets/music/wrong.mp3\",\n      maxVolume: 1,\n      audioRatio: 1\n    },\n    currentScore: 0,\n    currentLevel: 1\n  },\n  reducers: {\n    updateProducts(state, action) {\n      state.listProducts = action.payload;\n    },\n    updateCharacters(state, action) {\n      state.listCharacters = action.payload;\n    },\n    updateProductNames(state, action) {\n      state.listProductNames = action.payload;\n    },\n    updateLevels(state, action) {\n      state.levels = action.payload;\n    },\n    updateTimeStepPercentage(state, action) {\n      state.timeStepPercentage = action.payload;\n    },\n    resetGame(state) {\n      // Đặt lại trạng thái game về mặc định\n      state.listProducts = [];\n      state.listCharacters = [];\n      state.listProductNames = [];\n      state.levels = [];\n      state.timeStepPercentage = [];\n      state.initTimeRemainder = 100;\n      state.playTimes = 5;\n      state.requiredNumberProducts = 0;\n      state.maxRequiredProducts = 5;\n      state.answerDone = false;\n      state.timeStepDenominator = 10;\n      state.gameTime = {\n        timerInterval: null,\n        timeRemainder: 100,\n        timeStep: 10\n      };\n      state.gameSound = {\n        audioBackground: \"/src/assets/music/bg_sound.mp3\",\n        audioFail: \"src/assets/music/wrong.mp3\",\n        maxVolume: 1,\n        audioRatio: 1\n      };\n      state.currentScore = 0;\n      state.currentLevel = 1;\n    },\n    incrementScore(state) {\n      state.currentScore += 1;\n    },\n    incrementLevel(state) {\n      state.currentLevel += 1;\n    }\n  }\n});\nexport const {\n  updateProducts,\n  updateCharacters,\n  updateProductNames,\n  updateLevels,\n  updateTimeStepPercentage,\n  resetGame,\n  incrementScore,\n  incrementLevel\n} = gameSlice.actions;\nexport const store = configureStore({\n  redu\n});\nexport default gameSlice.reducer;","map":{"version":3,"names":["configureStore","createSlice","gameSlice","name","initialState","listProducts","listCharacters","listProductNames","levels","timeStepPercentage","initTimeRemainder","playTimes","requiredNumberProducts","maxRequiredProducts","answerDone","timeStepDenominator","gameTime","timerInterval","timeRemainder","timeStep","gameSound","audioBackground","audioFail","maxVolume","audioRatio","currentScore","currentLevel","reducers","updateProducts","state","action","payload","updateCharacters","updateProductNames","updateLevels","updateTimeStepPercentage","resetGame","incrementScore","incrementLevel","actions","store","redu","reducer"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/store/gameSlice.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState: {\r\n    listProducts: [],\r\n    listCharacters: [],\r\n    listProductNames: [],\r\n    levels: [],\r\n    timeStepPercentage: [],\r\n    initTimeRemainder: 100,\r\n    playTimes: 5,\r\n    requiredNumberProducts: 0,\r\n    maxRequiredProducts: 5,\r\n    answerDone: false,\r\n    timeStepDenominator: 10,\r\n    gameTime: {\r\n      timerInterval: null,\r\n      timeRemainder: 100,\r\n      timeStep: 10,\r\n    },\r\n    gameSound: {\r\n      audioBackground: \"assets/music/bg_sound.mp3\",\r\n      audioFail: \"assets/music/wrong.mp3\",\r\n      maxVolume: 1,\r\n      audioRatio: 1,\r\n    },\r\n    currentScore: 0,\r\n    currentLevel: 1,\r\n  },\r\n  reducers: {\r\n    updateProducts(state, action) {\r\n      state.listProducts = action.payload;\r\n    },\r\n    updateCharacters(state, action) {\r\n      state.listCharacters = action.payload;\r\n    },\r\n    updateProductNames(state, action) {\r\n      state.listProductNames = action.payload;\r\n    },\r\n    updateLevels(state, action) {\r\n      state.levels = action.payload;\r\n    },\r\n    updateTimeStepPercentage(state, action) {\r\n      state.timeStepPercentage = action.payload;\r\n    },\r\n    resetGame(state) {\r\n      // Đặt lại trạng thái game về mặc định\r\n      state.listProducts = [];\r\n      state.listCharacters = [];\r\n      state.listProductNames = [];\r\n      state.levels = [];\r\n      state.timeStepPercentage = [];\r\n      state.initTimeRemainder = 100;\r\n      state.playTimes = 5;\r\n      state.requiredNumberProducts = 0;\r\n      state.maxRequiredProducts = 5;\r\n      state.answerDone = false;\r\n      state.timeStepDenominator = 10;\r\n      state.gameTime = {\r\n        timerInterval: null,\r\n        timeRemainder: 100,\r\n        timeStep: 10,\r\n      };\r\n      state.gameSound = {\r\n        audioBackground: \"/src/assets/music/bg_sound.mp3\",\r\n        audioFail: \"src/assets/music/wrong.mp3\",\r\n        maxVolume: 1,\r\n        audioRatio: 1,\r\n      };\r\n      state.currentScore = 0;\r\n      state.currentLevel = 1;\r\n    },\r\n    incrementScore(state) {\r\n      state.currentScore += 1;\r\n    },\r\n    incrementLevel(state) {\r\n      state.currentLevel += 1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateProducts,\r\n  updateCharacters,\r\n  updateProductNames,\r\n  updateLevels,\r\n  updateTimeStepPercentage,\r\n  resetGame,\r\n  incrementScore,\r\n  incrementLevel,\r\n} = gameSlice.actions;\r\n\r\nexport const store = configureStore({\r\n    redu\r\n})\r\n\r\nexport default gameSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}