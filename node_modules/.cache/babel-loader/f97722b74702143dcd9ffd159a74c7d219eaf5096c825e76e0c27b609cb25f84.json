{"ast":null,"code":"// src/utils/audioManager.js\n\nclass AudioManager {\n  constructor() {\n    this.audioBackground = new Audio(\"/music/bg_sound.mp3\");\n    this.audioFail = new Audio(\"/music/wrong.mp3\");\n  }\n  setAudioBackground(src) {\n    this.audioBackground.src = src;\n  }\n  setAudioFail(src) {\n    this.audioFail.src = src;\n  }\n  playBackgroundSound() {\n    this.audioBackground.play().catch(error => {\n      console.error('Audio play failed:', error);\n      console.log('Audio play failed:', error);\n    });\n  }\n  playSoundGameOver() {\n    this.audioFail.play().catch(error => {\n      console.error('Audio play failed:', error);\n    });\n  }\n  setBackgroundPlaybackRate(rate) {\n    this.audioBackground.playbackRate = rate;\n  }\n  getAudioBackground() {\n    return this.audioBackground;\n  }\n  getAudioFail() {\n    return this.audioFail;\n  }\n}\nconst audioManager = new AudioManager();\nexport default audioManager;","map":{"version":3,"names":["AudioManager","constructor","audioBackground","Audio","audioFail","setAudioBackground","src","setAudioFail","playBackgroundSound","play","catch","error","console","log","playSoundGameOver","setBackgroundPlaybackRate","rate","playbackRate","getAudioBackground","getAudioFail","audioManager"],"sources":["C:/Users/Admin/OneDrive/Máy tính/MiniGame-ReduxToolKit/src/utils/audioManager.js"],"sourcesContent":["// src/utils/audioManager.js\r\n\r\nclass AudioManager {\r\n    constructor() {\r\n        this.audioBackground = new Audio(\"/music/bg_sound.mp3\");\r\n        this.audioFail = new Audio(\"/music/wrong.mp3\");\r\n    }\r\n\r\n    setAudioBackground(src) {\r\n        this.audioBackground.src = src;\r\n    }\r\n\r\n    setAudioFail(src) {\r\n        this.audioFail.src = src;\r\n    }\r\n\r\n    playBackgroundSound() {\r\n        this.audioBackground.play().catch(error => {\r\n            console.error('Audio play failed:', error);\r\n            console.log('Audio play failed:', error);\r\n        });\r\n    }\r\n\r\n    playSoundGameOver() {\r\n        this.audioFail.play().catch(error => {\r\n            console.error('Audio play failed:', error);\r\n        });\r\n    }\r\n\r\n    setBackgroundPlaybackRate(rate) {\r\n        this.audioBackground.playbackRate = rate;\r\n    }\r\n\r\n    getAudioBackground() {\r\n        return this.audioBackground;\r\n    }\r\n\r\n    getAudioFail() {\r\n        return this.audioFail;\r\n    }\r\n}\r\n\r\nconst audioManager = new AudioManager();\r\n\r\nexport default audioManager;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,eAAe,GAAG,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACvD,IAAI,CAACC,SAAS,GAAG,IAAID,KAAK,CAAC,kBAAkB,CAAC;EAClD;EAEAE,kBAAkBA,CAACC,GAAG,EAAE;IACpB,IAAI,CAACJ,eAAe,CAACI,GAAG,GAAGA,GAAG;EAClC;EAEAC,YAAYA,CAACD,GAAG,EAAE;IACd,IAAI,CAACF,SAAS,CAACE,GAAG,GAAGA,GAAG;EAC5B;EAEAE,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACN,eAAe,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACvCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;IAC5C,CAAC,CAAC;EACN;EAEAG,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACV,SAAS,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACjCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;EAEAI,yBAAyBA,CAACC,IAAI,EAAE;IAC5B,IAAI,CAACd,eAAe,CAACe,YAAY,GAAGD,IAAI;EAC5C;EAEAE,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAAChB,eAAe;EAC/B;EAEAiB,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACf,SAAS;EACzB;AACJ;AAEA,MAAMgB,YAAY,GAAG,IAAIpB,YAAY,CAAC,CAAC;AAEvC,eAAeoB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}