{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  listProducts: [],\n  listCharacters: [],\n  levels: [],\n  timeStepPercentage: [],\n  countdownTime: 3,\n  showCountdownModal: false,\n  intervalId: null,\n  showGameContent: false,\n  initTimeRemainder: 100,\n  playTimes: 5,\n  requiredNumberProducts: 0,\n  maxRequiredProducts: 5,\n  answerDone: false,\n  timeStepDenominator: 10,\n  gameTime: {\n    timerInterval: null,\n    timeRemainder: 100,\n    timeStep: 10\n  },\n  gameSound: {\n    audioBackground: \"assets/music/bg_sound.mp3\",\n    audioFail: \"assets/music/wrong.mp3\",\n    maxVolume: 1,\n    audioRatio: 1\n  },\n  currentScore: 0,\n  currentLevel: 1\n};\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    updateProducts(state, action) {\n      state.listProducts = action.payload;\n    },\n    updateCharacters(state, action) {\n      state.listCharacters = action.payload;\n    },\n    updateLevels(state, action) {\n      state.levels = action.payload;\n    },\n    updateTimeStepPercentage(state, action) {\n      state.timeStepPercentage = action.payload;\n    },\n    setCountdownTime(state, action) {\n      state.countdownTime = action.payload;\n    },\n    toggleCountdownModal(state, action) {\n      state.showCountdownModal = action.payload;\n    },\n    setIntervalId(state, action) {\n      state.intervalId = action.payload;\n    },\n    toggleGameContent(state, action) {\n      state.showGameContent = action.payload;\n    },\n    resetGame(state) {\n      return initialState;\n    },\n    incrementScore(state) {\n      state.currentScore += 1;\n    },\n    incrementLevel(state) {\n      state.currentLevel += 1;\n    },\n    setGameData(state, action) {\n      state.listProducts = action.payload.products;\n      state.listCharacters = action.payload.characters;\n      state.levels = action.payload.levels;\n    }\n  }\n});\nexport const {\n  updateProducts,\n  updateCharacters,\n  updateLevels,\n  updateTimeStepPercentage,\n  resetGame,\n  incrementScore,\n  incrementLevel,\n  setCountdownTime,\n  toggleCountdownModal,\n  setIntervalId,\n  toggleGameContent,\n  setGameData\n} = gameSlice.actions;\nexport const getRandomNameCorrect = state => {\n  var _products$randomIndex;\n  const listProducts = state.game.listProducts;\n  const randomIndex = Math.floor(Math.random() * products.length);\n  return ((_products$randomIndex = products[randomIndex]) === null || _products$randomIndex === void 0 ? void 0 : _products$randomIndex.title) || '';\n};\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","initialState","listProducts","listCharacters","levels","timeStepPercentage","countdownTime","showCountdownModal","intervalId","showGameContent","initTimeRemainder","playTimes","requiredNumberProducts","maxRequiredProducts","answerDone","timeStepDenominator","gameTime","timerInterval","timeRemainder","timeStep","gameSound","audioBackground","audioFail","maxVolume","audioRatio","currentScore","currentLevel","gameSlice","name","reducers","updateProducts","state","action","payload","updateCharacters","updateLevels","updateTimeStepPercentage","setCountdownTime","toggleCountdownModal","setIntervalId","toggleGameContent","resetGame","incrementScore","incrementLevel","setGameData","products","characters","actions","getRandomNameCorrect","_products$randomIndex","game","randomIndex","Math","floor","random","length","title","store","reducer"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/store/gameSlice.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  listProducts: [],\r\n  listCharacters: [],\r\n  levels: [],\r\n  timeStepPercentage: [],\r\n  countdownTime: 3,\r\n  showCountdownModal: false,\r\n  intervalId: null,\r\n  showGameContent: false,\r\n  initTimeRemainder: 100,\r\n  playTimes: 5,\r\n  requiredNumberProducts: 0,\r\n  maxRequiredProducts: 5,\r\n  answerDone: false,\r\n  timeStepDenominator: 10,\r\n  gameTime: {\r\n    timerInterval: null,\r\n    timeRemainder: 100,\r\n    timeStep: 10,\r\n  },\r\n  gameSound: {\r\n    audioBackground: \"assets/music/bg_sound.mp3\",\r\n    audioFail: \"assets/music/wrong.mp3\",\r\n    maxVolume: 1,\r\n    audioRatio: 1,\r\n  },\r\n  currentScore: 0,\r\n  currentLevel: 1,\r\n};\r\n\r\nconst gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    updateProducts(state, action) {\r\n      state.listProducts = action.payload;\r\n    },\r\n    updateCharacters(state, action) {\r\n      state.listCharacters = action.payload;\r\n    },\r\n    updateLevels(state, action) {\r\n      state.levels = action.payload;\r\n    },\r\n    updateTimeStepPercentage(state, action) {\r\n      state.timeStepPercentage = action.payload;\r\n    },\r\n    setCountdownTime(state, action) {\r\n      state.countdownTime = action.payload;\r\n    },\r\n    toggleCountdownModal(state, action) {\r\n      state.showCountdownModal = action.payload;\r\n    },\r\n    setIntervalId(state, action) {\r\n      state.intervalId = action.payload;\r\n    },\r\n    toggleGameContent(state, action) {\r\n      state.showGameContent = action.payload;\r\n    },\r\n    resetGame(state) {\r\n      return initialState;\r\n    },\r\n    incrementScore(state) {\r\n      state.currentScore += 1;\r\n    },\r\n    incrementLevel(state) {\r\n      state.currentLevel += 1;\r\n    },\r\n    setGameData(state, action) {\r\n      state.listProducts = action.payload.products;\r\n      state.listCharacters = action.payload.characters;\r\n      state.levels = action.payload.levels;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateProducts,\r\n  updateCharacters,\r\n  updateLevels,\r\n  updateTimeStepPercentage,\r\n  resetGame,\r\n  incrementScore,\r\n  incrementLevel,\r\n  setCountdownTime,\r\n  toggleCountdownModal,\r\n  setIntervalId,\r\n  toggleGameContent,\r\n  setGameData,\r\n} = gameSlice.actions;\r\n\r\nexport const getRandomNameCorrect = (state) => {\r\n  const listProducts = state.game.listProducts;\r\n  const randomIndex = Math.floor(Math.random() * products.length);\r\n  return products[randomIndex]?.title || '';\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice.reducer,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}