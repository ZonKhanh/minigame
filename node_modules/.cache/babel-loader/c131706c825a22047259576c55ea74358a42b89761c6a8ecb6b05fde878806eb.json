{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\AUDIO\\\\minigame-react\\\\src\\\\components\\\\GameContentModal\\\\GameContentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport './GameContent.css';\nimport coin from '../../assets/img/play-page/coin.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchData } from '../../utils/api';\nimport { setGameData, showRandomNameCorrect, playSoundGameOver, showGameOver, incrementScore, updateGameLevel, setTimerInterval, resetCountdownTime, resetTimeRemainder, showCountdownTime, pauseCountdownTime, incrementNumberCorrect, resetNumberCorrect } from '../../store/gameSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const initTimeRemainder = 100;\n  const timeRemainder = useSelector(state => state.game.gameTime.timeRemainder);\n  const timeStep = useSelector(state => state.game.gameTime.timeStep);\n  const numberCorrectDisplay = useSelector(state => state.game.numberCorrectDisplay);\n  const showGameContent = useSelector(state => state.game.showGameContent);\n  const nameCorrectIndex = useSelector(state => state.game.nameCorrectIndex);\n  const randomNameCorrect = useSelector(state => state.game.randomNameCorrect);\n  const requiredNumberProducts = useSelector(state => state.game.requiredNumberProducts);\n  const score = useSelector(state => state.game.currentScore);\n  const gameLevel = useSelector(state => state.game.currentLevel);\n  const gameTime = useSelector(state => state.game.gameTime);\n  const [characters, setCharacters] = useState([]);\n  const [products, setProducts] = useState([]);\n  const shuffleArray = array => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n  };\n  const shuffledCharacters = useMemo(() => shuffleArray(characters), [characters]);\n  const nameCorrectPosition = useMemo(() => Math.floor(Math.random() * characters.length), [characters]);\n  useEffect(() => {\n    if (showGameContent) {\n      dispatch(resetCountdownTime());\n      const timerInterval = setInterval(() => {\n        dispatch(showCountdownTime());\n      }, 1000);\n      dispatch(setTimerInterval(timerInterval));\n      return () => {\n        clearInterval(timerInterval);\n        dispatch(setTimerInterval(null));\n      };\n    }\n  }, [dispatch, showGameContent, timeStep]);\n  useEffect(() => {\n    if (showGameContent) {\n      fetchData(process.env.PUBLIC_URL + '/data.json').then(data => {\n        const processedData = {\n          products: data.products.map(product => ({\n            ...product,\n            url: data.productsAssetsPath + product.url\n          })),\n          characters: data.characters.map(character => ({\n            ...character,\n            url: data.charactersAssetsPath + character.url,\n            activeUrl: data.charactersAssetsPath + character.activeUrl\n          })),\n          levels: data.levels || []\n        };\n        dispatch(setGameData(processedData));\n        setCharacters(processedData.characters);\n        setProducts(processedData.products);\n        setTimeout(() => {\n          dispatch(showRandomNameCorrect());\n        }, 0);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    }\n  }, [showGameContent, dispatch]);\n  useEffect(() => {\n    const getAnswer = () => {\n      document.querySelectorAll('.product-card').forEach(card => {\n        card.addEventListener('click', event => {\n          const productCard = event.currentTarget;\n          const requireProduct = cleanString(document.querySelector('.name-correct-desc').innerText.toLowerCase());\n          const productTitle = cleanString(productCard.querySelector('.product-card-name').innerText.toLowerCase());\n          if (productTitle === requireProduct) {\n            handleCorrectAnswer(productCard);\n          } else {\n            handleIncorrectAnswer();\n          }\n        });\n      });\n    };\n    const cleanString = str => {\n      return str.replace(/[^a-z0-9]/gi, '').trim();\n    };\n    if (products.length > 0) {\n      getAnswer();\n    }\n  }, [products]);\n  const handleCorrectAnswer = productCard => {\n    const numberCorrectElement = productCard.querySelector('.number-correct span:last-child');\n    const newValue = Number(numberCorrectElement.innerText) + 1;\n    const ketqua = document.querySelector('.name-correct-number').innerText.toLowerCase();\n    numberCorrectElement.innerText = newValue;\n    productCard.querySelector('.number-correct').style.display = \"flex\";\n    const ketquaNumber = parseInt(ketqua, 10);\n    if (newValue > ketquaNumber) {\n      console.log('Bạn đã chọn quá số lượng!');\n      dispatch(showGameOver());\n    } else if (newValue === ketquaNumber) {\n      console.log('Bạn đã chọn đúng');\n      setTimeout(() => {\n        dispatch(updateGameLevel());\n        dispatch(incrementScore());\n        resetAnswer();\n      }, 300);\n    }\n  };\n  const handleIncorrectAnswer = () => {\n    console.log('Bạn đã chọn sai!');\n    dispatch(playSoundGameOver());\n    dispatch(showGameOver());\n  };\n  const resetAnswer = () => {\n    document.querySelectorAll('.number-correct span:last-child').forEach(span => {\n      span.innerText = '0';\n    });\n    document.querySelectorAll('.name-correct-desc').forEach(desc => {\n      desc.innerText = '';\n    });\n    document.querySelectorAll('.number-correct').forEach(correct => {\n      correct.style.display = 'none';\n    });\n    if (gameTime.timerInterval) {\n      clearInterval(gameTime.timerInterval);\n    }\n    dispatch(resetTimeRemainder(initTimeRemainder));\n    dispatch(resetNumberCorrect());\n    dispatch(showRandomNameCorrect());\n    document.querySelector(\".timer-range\").style.width = initTimeRemainder + \"%\";\n    dispatch(setTimerInterval(null));\n  };\n  useEffect(() => {\n    if (timeRemainder <= 0) {\n      dispatch(showGameOver());\n      dispatch(playSoundGameOver());\n    }\n  }, [timeRemainder, dispatch]);\n  if (!showGameContent) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-content-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      style: {\n        display: showGameContent ? 'flex' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-top-site row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row product-card-list\",\n        style: {\n          marginLeft: '0',\n          marginRight: '0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row character-card-list\",\n        style: {\n          marginLeft: '0',\n          marginRight: '0'\n        },\n        children: shuffledCharacters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-3 col-lg-3 col-md-4 col-sm-6 col-xs-6 character-list-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.url,\n            alt: `character-${index + 1}-card`,\n            className: `character-card character-${index + 1}-card`,\n            style: {\n              display: index === nameCorrectPosition ? 'none' : 'block'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.activeUrl,\n            alt: `character-${index + 1}-card-active`,\n            className: `character-card character-${index + 1}-card-active`,\n            style: {\n              display: index === nameCorrectPosition ? 'block' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), index === nameCorrectPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-correct\",\n            style: {\n              display: 'block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name-correct-number\",\n              style: {\n                marginRight: '5px'\n              },\n              children: requiredNumberProducts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name-correct-desc\",\n              children: randomNameCorrect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(GameContent, \"Ksrgv0M4VLq+xEKKOg0xT9J7bPc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = GameContent;\nexport default GameContent;\nvar _c;\n$RefreshReg$(_c, \"GameContent\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","coin","useSelector","useDispatch","fetchData","setGameData","showRandomNameCorrect","playSoundGameOver","showGameOver","incrementScore","updateGameLevel","setTimerInterval","resetCountdownTime","resetTimeRemainder","showCountdownTime","pauseCountdownTime","incrementNumberCorrect","resetNumberCorrect","jsxDEV","_jsxDEV","GameContent","_s","dispatch","initTimeRemainder","timeRemainder","state","game","gameTime","timeStep","numberCorrectDisplay","showGameContent","nameCorrectIndex","randomNameCorrect","requiredNumberProducts","score","currentScore","gameLevel","currentLevel","characters","setCharacters","products","setProducts","shuffleArray","array","newArray","i","length","j","Math","floor","random","shuffledCharacters","nameCorrectPosition","timerInterval","setInterval","clearInterval","process","env","PUBLIC_URL","then","data","processedData","map","product","url","productsAssetsPath","character","charactersAssetsPath","activeUrl","levels","setTimeout","catch","error","console","getAnswer","document","querySelectorAll","forEach","card","addEventListener","event","productCard","currentTarget","requireProduct","cleanString","querySelector","innerText","toLowerCase","productTitle","handleCorrectAnswer","handleIncorrectAnswer","str","replace","trim","numberCorrectElement","newValue","Number","ketqua","style","display","ketquaNumber","parseInt","log","resetAnswer","span","desc","correct","width","className","children","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","marginRight","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/components/GameContentModal/GameContentModal.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport './GameContent.css';\r\nimport coin from '../../assets/img/play-page/coin.png';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../utils/api';\r\nimport {\r\n  setGameData,\r\n  showRandomNameCorrect,\r\n  playSoundGameOver,\r\n  showGameOver,\r\n  incrementScore,\r\n  updateGameLevel,\r\n  setTimerInterval,\r\n  resetCountdownTime,\r\n  resetTimeRemainder,\r\n  showCountdownTime,\r\n  pauseCountdownTime,\r\n  incrementNumberCorrect,\r\n  resetNumberCorrect,\r\n} from '../../store/gameSlice';\r\n\r\nconst GameContent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initTimeRemainder = 100;\r\n\r\n  const timeRemainder = useSelector(state => state.game.gameTime.timeRemainder);\r\n  const timeStep = useSelector(state => state.game.gameTime.timeStep);\r\n  const numberCorrectDisplay = useSelector(state => state.game.numberCorrectDisplay);\r\n  const showGameContent = useSelector((state) => state.game.showGameContent);\r\n  const nameCorrectIndex = useSelector((state) => state.game.nameCorrectIndex);\r\n  const randomNameCorrect = useSelector((state) => state.game.randomNameCorrect);\r\n  const requiredNumberProducts = useSelector((state) => state.game.requiredNumberProducts);\r\n  const score = useSelector((state) => state.game.currentScore);\r\n  const gameLevel = useSelector((state) => state.game.currentLevel);\r\n  const gameTime = useSelector((state) => state.game.gameTime);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const shuffleArray = (array) => {\r\n    const newArray = [...array];\r\n    for (let i = newArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  const shuffledCharacters = useMemo(() => shuffleArray(characters), [characters]);\r\n  const nameCorrectPosition = useMemo(() => Math.floor(Math.random() * characters.length), [characters]);\r\n\r\n  useEffect(() => {\r\n    if (showGameContent) {\r\n      dispatch(resetCountdownTime());\r\n      const timerInterval = setInterval(() => {\r\n        dispatch(showCountdownTime());\r\n      }, 1000);\r\n      dispatch(setTimerInterval(timerInterval));\r\n      return () => {\r\n        clearInterval(timerInterval);\r\n        dispatch(setTimerInterval(null));\r\n      };\r\n    }\r\n  }, [dispatch, showGameContent, timeStep]);\r\n  \r\n  useEffect(() => {\r\n    if (showGameContent) {\r\n      fetchData(process.env.PUBLIC_URL + '/data.json')\r\n        .then((data) => {\r\n          const processedData = {\r\n            products: data.products.map(product => ({\r\n              ...product,\r\n              url: data.productsAssetsPath + product.url,\r\n            })),\r\n            characters: data.characters.map(character => ({\r\n              ...character,\r\n              url: data.charactersAssetsPath + character.url,\r\n              activeUrl: data.charactersAssetsPath + character.activeUrl,\r\n            })),\r\n            levels: data.levels || [],\r\n          };\r\n          dispatch(setGameData(processedData));\r\n          setCharacters(processedData.characters);\r\n          setProducts(processedData.products);\r\n          setTimeout(() => {\r\n            dispatch(showRandomNameCorrect());  \r\n          }, 0);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching data:', error);\r\n        });\r\n    }\r\n  }, [showGameContent, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const getAnswer = () => {\r\n      document.querySelectorAll('.product-card').forEach(card => {\r\n        card.addEventListener('click', (event) => {\r\n          const productCard = event.currentTarget;\r\n          const requireProduct = cleanString(document.querySelector('.name-correct-desc').innerText.toLowerCase());\r\n          const productTitle = cleanString(productCard.querySelector('.product-card-name').innerText.toLowerCase());\r\n\r\n          if (productTitle === requireProduct) {\r\n            handleCorrectAnswer(productCard);\r\n          } else {\r\n            handleIncorrectAnswer();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const cleanString = (str) => {\r\n      return str.replace(/[^a-z0-9]/gi, '').trim();\r\n    };\r\n\r\n    if (products.length > 0) {\r\n      getAnswer();\r\n    }\r\n  }, [products]);\r\n\r\n  const handleCorrectAnswer = (productCard) => {\r\n    const numberCorrectElement = productCard.querySelector('.number-correct span:last-child');\r\n    const newValue = Number(numberCorrectElement.innerText) + 1;\r\n    const ketqua = document.querySelector('.name-correct-number').innerText.toLowerCase();\r\n    numberCorrectElement.innerText = newValue;\r\n    productCard.querySelector('.number-correct').style.display = \"flex\";\r\n    const ketquaNumber = parseInt(ketqua, 10);\r\n   \r\n    if (newValue > ketquaNumber) {\r\n      console.log('Bạn đã chọn quá số lượng!');\r\n      dispatch(showGameOver());\r\n    } else if (newValue === ketquaNumber) {\r\n      console.log('Bạn đã chọn đúng');\r\n      setTimeout(() => {\r\n        dispatch(updateGameLevel());\r\n        dispatch(incrementScore());\r\n        resetAnswer();\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const handleIncorrectAnswer = () => {\r\n    console.log('Bạn đã chọn sai!');\r\n    dispatch(playSoundGameOver());\r\n    dispatch(showGameOver());\r\n  };\r\n\r\n  const resetAnswer = () => {\r\n    document.querySelectorAll('.number-correct span:last-child').forEach(span => {\r\n      span.innerText = '0';\r\n    });\r\n    document.querySelectorAll('.name-correct-desc').forEach(desc => {\r\n      desc.innerText = '';\r\n    });\r\n    document.querySelectorAll('.number-correct').forEach(correct => {\r\n      correct.style.display = 'none';\r\n    });\r\n    if (gameTime.timerInterval) {\r\n      clearInterval(gameTime.timerInterval);\r\n    }\r\n    dispatch(resetTimeRemainder(initTimeRemainder));\r\n    dispatch(resetNumberCorrect());\r\n    dispatch(showRandomNameCorrect());\r\n    document.querySelector(\".timer-range\").style.width = initTimeRemainder + \"%\";\r\n    dispatch(setTimerInterval(null));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timeRemainder <= 0) {\r\n      dispatch(showGameOver());\r\n      dispatch(playSoundGameOver());\r\n    }\r\n  }, [timeRemainder, dispatch]);\r\n\r\n  if (!showGameContent) return null;\r\n\r\n  return (\r\n    <div className=\"game-content-modal\">\r\n      <div className=\"game-content\" style={{ display: showGameContent ? 'flex' : 'none' }}>\r\n        <div className=\"play-top-site row\">\r\n          {/* ... (phần code cho play-top-site giữ nguyên) ... */}\r\n        </div>\r\n\r\n        <div className=\"row product-card-list\" style={{ marginLeft: '0', marginRight: '0' }}>\r\n          {/* ... (phần code cho product-card-list giữ nguyên) ... */}\r\n        </div>\r\n\r\n        <div className=\"row character-card-list\" style={{ marginLeft: '0', marginRight: '0' }}>\r\n          {shuffledCharacters.map((character, index) => (\r\n            <div key={index} className=\"col-xl-3 col-lg-3 col-md-4 col-sm-6 col-xs-6 character-list-content\">\r\n              <img\r\n                src={character.url}\r\n                alt={`character-${index + 1}-card`}\r\n                className={`character-card character-${index + 1}-card`}\r\n                style={{ display: index === nameCorrectPosition ? 'none' : 'block' }}\r\n              />\r\n              <img\r\n                src={character.activeUrl}\r\n                alt={`character-${index + 1}-card-active`}\r\n                className={`character-card character-${index + 1}-card-active`}\r\n                style={{ display: index === nameCorrectPosition ? 'block' : 'none' }}\r\n              />\r\n              {index === nameCorrectPosition && (\r\n                <div className=\"name-correct\" style={{ display: 'block' }}>\r\n                  <span className=\"name-correct-number\" style={{ marginRight: '5px' }}>{requiredNumberProducts}</span>\r\n                  <span className=\"name-correct-desc\">{randomNameCorrect}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}