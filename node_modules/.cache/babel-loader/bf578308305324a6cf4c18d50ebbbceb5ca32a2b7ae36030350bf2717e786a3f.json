{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\AUDIO\\\\minigame-react\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateProducts, updateCharacters, updateProductNames, updateLevels, updateTimeStepPercentage, resetGame, incrementScore, incrementLevel } from '../store/gameSlice';\nimport { fetchData } from '../utils/api'; // Hàm tải dữ liệu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    listProducts,\n    listCharacters,\n    listProductNames,\n    levels,\n    currentScore,\n    currentLevel\n  } = useSelector(state => state.game);\n  useEffect(() => {\n    fetchData('src/assets/data.json').then(data => {\n      dispatch(updateProducts(data.products));\n      dispatch(updateCharacters(data.characters));\n      dispatch(updateProductNames(data.productNames));\n      dispatch(updateLevels(data.levels));\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    return () => {\n      dispatch(resetGame());\n    };\n  }, [dispatch]);\n\n  // Các hàm xử lý game\n  const handleCorrectAnswer = productTitle => {\n    // Xử lý khi người chơi chọn đúng\n    dispatch(incrementScore());\n    if (currentScore % 3 === 0 && currentScore > 0) {\n      dispatch(incrementLevel());\n      // Cập nhật timeStepDenominator từ levels\n      const levelData = levels.find(level => level.level === currentLevel);\n      if (levelData) {\n        // Cập nhật timeStepDenominator và timeStep\n        dispatch(updateTimeStepPercentage(levelData.timeStepPercentage));\n      }\n    }\n  };\n  const handleIncorrectAnswer = () => {\n    // Xử lý khi người chơi chọn sai\n    console.log('You choosed incorrect!');\n    // Dừng âm thanh nền\n    // dispatch(pauseBackgroundAudio());\n    // Hiển thị màn hình kết thúc game\n    // dispatch(showGameOver());\n    // Phát âm thanh khi game over\n    // dispatch(playGameOverSound());\n  };\n\n  // JSX của Game Component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErroModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"NdoylWMqwzSX6/w1QaX8PL64Keo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","updateProducts","updateCharacters","updateProductNames","updateLevels","updateTimeStepPercentage","resetGame","incrementScore","incrementLevel","fetchData","jsxDEV","_jsxDEV","Game","_s","dispatch","listProducts","listCharacters","listProductNames","levels","currentScore","currentLevel","state","game","then","data","products","characters","productNames","catch","error","console","handleCorrectAnswer","productTitle","levelData","find","level","timeStepPercentage","handleIncorrectAnswer","log","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Main","ErroModal","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/App.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  updateProducts,\n  updateCharacters,\n  updateProductNames,\n  updateLevels,\n  updateTimeStepPercentage,\n  resetGame,\n  incrementScore,\n  incrementLevel,\n} from '../store/gameSlice';\nimport { fetchData } from '../utils/api'; // Hàm tải dữ liệu\n\nconst Game = () => {\n  const dispatch = useDispatch();\n  const { listProducts, listCharacters, listProductNames, levels, currentScore, currentLevel } = useSelector((state) => state.game);\n\n  useEffect(() => {\n    fetchData('src/assets/data.json').then((data) => {\n      dispatch(updateProducts(data.products));\n      dispatch(updateCharacters(data.characters));\n      dispatch(updateProductNames(data.productNames));\n      dispatch(updateLevels(data.levels));\n    }).catch((error) => {\n      console.error('Error fetching data:', error);\n    });\n\n    return () => {\n      dispatch(resetGame());\n    };\n  }, [dispatch]);\n\n  // Các hàm xử lý game\n  const handleCorrectAnswer = (productTitle) => {\n    // Xử lý khi người chơi chọn đúng\n    dispatch(incrementScore());\n    if (currentScore % 3 === 0 && currentScore > 0) {\n      dispatch(incrementLevel());\n      // Cập nhật timeStepDenominator từ levels\n      const levelData = levels.find((level) => level.level === currentLevel);\n      if (levelData) {\n        // Cập nhật timeStepDenominator và timeStep\n        dispatch(updateTimeStepPercentage(levelData.timeStepPercentage));\n      }\n    }\n  };\n\n  const handleIncorrectAnswer = () => {\n    // Xử lý khi người chơi chọn sai\n    console.log('You choosed incorrect!');\n    // Dừng âm thanh nền\n    // dispatch(pauseBackgroundAudio());\n    // Hiển thị màn hình kết thúc game\n    // dispatch(showGameOver());\n    // Phát âm thanh khi game over\n    // dispatch(playGameOverSound());\n  };\n\n  // JSX của Game Component\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Main />\n      <ErroModal />\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}