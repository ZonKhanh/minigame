{"ast":null,"code":"import{configureStore,createSlice}from'@reduxjs/toolkit';const initialState={// Load data\nlistProducts:[],listCharacters:[],// Random\nmaxRequiredProducts:5,nameCorrectIndex:0,requiredNumberProducts:0,randomNameCorrect:'',// Audio\naudioBackground:new Audio(\"/music/bg_sound.mp3\"),audioFail:new Audio(\"/music/wrong.mp3\"),// Countdown Time\nlevels:[],timeStepPercentage:10,// Countdown\ncountdownTime:3,showCountdownModal:false,intervalId:null,showGameContent:false,// Error\naudioBackgroundPaused:false,showErrorModal:false,// Result\nshowResultGameModal:false,finalScore:0,// Reset Answer\nnumberCorrect:0,nameCorrectDesc:'',numberCorrectDisplay:'none',initTimeRemainder:100,score:0,gameTime:{timerInterval:null,timeRemainder:100,timerRangeWidth:'100%',timeStep:10},gameSound:{audioBackground:\"/music/bg_sound.mp3\",audioFail:\"music/wrong.mp3\",maxVolume:1,audioRatio:1},// Update Level\ncurrentScore:0,currentLevel:1,requiredProductNumber:0// timerRangeWidth: '100%',\n};const gameSlice=createSlice({name:'game',initialState,reducers:{// Load data\nupdateProducts(state,action){state.listProducts=action.payload;},updateCharacters(state,action){state.listCharacters=action.payload;},updateLevels(state,action){state.levels=action.payload;},updateTimeStepPercentage(state,action){state.timeStepPercentage=action.payload;},setTimerInterval(state,action){state.gameTime.timerInterval=action.payload;},// Countdown Time\nshowCountdownTime(state){state.gameTime.timeRemainder-=state.gameTime.timeStep;if(state.gameTime.timeRemainder<=0){clearInterval(state.gameTime.timerInterval);state.gameTime.timeRemainder=0;state.showErrorModal=true;}state.timerRangeWidth=Math.max(state.gameTime.timeRemainder/state.gameTime.timeStep*100,0)+'%';},setCountdownTime(state,action){state.countdownTime=action.payload;},// Thiết lập lại thời gian\nresetCountdownTime(state){state.gameTime.timeRemainder=state.initTimeRemainder;state.timerRangeWidth='100%';clearInterval(state.gameTime.timerInterval);},// Dừng thời gian\npauseCountdownTime(state){state.gameTime.timeRemaining=state.gameTime.timeRemainder;clearInterval(state.gameTime.timerInterval);state.gameTime.timerInterval=null;state.gameTime.timerRangeWidth=\"\".concat(state.gameTime.timeRemaining/100*100,\"%\");},// Countdown\ntoggleCountdownModal(state,action){state.showCountdownModal=action.payload;},// Error\nshowGameOver(state){clearInterval(state.gameTime.timerInterval);state.showErrorModal=true;},hideErrorModal(state){state.showErrorModal=false;},// Result\nshowResultGame(state){state.showResultGameModal=true;state.finalScore=state.currentScore;},// hideResultModal(state) {\n//   state.showResultGameModal = false;\n// },\nincrementScore(state){state.currentScore+=1;},updateGameLevel(state){state.currentLevel=Math.floor(state.currentScore/3)+1;const levelData=state.levels.find(level=>level.level===state.currentLevel);if(levelData){state.timeStepDenominator=levelData.timeStepPercentage;state.gameTime.timeStep=state.initTimeRemainder/(100/state.timeStepDenominator);}},//\nsetIntervalId(state,action){state.intervalId=action.payload;},clearGameInterval(state){if(state.intervalId){clearInterval(state.intervalId);state.intervalId=null;}},//\ntoggleGameContent(state,action){state.showGameContent=action.payload;},resetGame(){return initialState;},setShowRandomProductName(state,action){state.requiredNumberProducts=action.payload;// Sửa từ requiredProductName thành requiredNumberProducts\n},setRandomProductNumber(state,action){state.requiredProductNumber=action.payload;},setGameData(state,action){state.listProducts=action.payload.products;state.listCharacters=action.payload.characters;state.levels=action.payload.levels;},resetTimeRemainder:(state,action)=>{state.gameTime.timeRemainder=action.payload;},incrementNumberCorrect(state){state.numberCorrect+=1;},resetNumberCorrect(state){state.numberCorrect=0;},// showRandomNameCorrect(state) {\n//   const randomIndex = Math.floor(Math.random() * state.listProducts.length);\n//   const maxRequiredProducts = 5;\n//   state.nameCorrectIndex = randomIndex;\n//   state.requiredNumberProducts = Math.floor(Math.random() * maxRequiredProducts) + 1;\n//   state.randomNameCorrect = state.listProducts[randomIndex]?.title || '';\n// },\nshowRandomNameCorrect(state){var _state$listProducts$r;if(state.listProducts.length===0){console.error('No products available for random selection');return;}const randomIndex=Math.floor(Math.random()*state.listProducts.length);const maxRequiredProducts=5;state.nameCorrectIndex=randomIndex;state.requiredNumberProducts=Math.floor(Math.random()*maxRequiredProducts)+1;state.randomNameCorrect=((_state$listProducts$r=state.listProducts[randomIndex])===null||_state$listProducts$r===void 0?void 0:_state$listProducts$r.title)||'';console.log('Random Name Correct:',state.randomNameCorrect,'Required Number:',state.requiredNumberProducts);},setAudioBackground:(state,action)=>{state.audioBackground=new Audio(action.payload);},setAudioFail:(state,action)=>{state.audioFail=new Audio(action.payload);},pauseAudio:state=>{state.audioBackground.pause();},playBackgroundSound:state=>{if(state.audioBackground){state.audioBackground.play().catch(error=>{console.error('Audio play failed:',error);});}},playSoundGameOver:state=>{if(state.audioFail){state.audioFail.play().catch(error=>{console.error('Audio play failed:',error);});}},playbackRateAudioBackground:(state,action)=>{if(state.audioBackground){state.audioBackground.playbackRate=action.payload;}}}});export const{updateProducts,updateCharacters,updateLevels,updateTimeStepPercentage,resetGame,setCountdownTime,toggleCountdownModal,setIntervalId,clearGameInterval,setTimerInterval,showCountdownTime,resetCountdownTime,pauseCountdownTime,showGameOver,hideErrorModal,showResultGame,hideResultModal,toggleGameContent,setShowRandomProductName,setRandomProductNumber,setGameData,showRandomNameCorrect,// resetAnswer,\nincrementNumberCorrect,resetNumberCorrect,setAudioFail,playBackgroundSound,playSoundGameOver,playbackRateAudioBackground,pauseAudio,incrementScore,updateGameLevel,resetTimeRemainder}=gameSlice.actions;export const store=configureStore({reducer:{game:gameSlice.reducer}});","map":{"version":3,"names":["configureStore","createSlice","initialState","listProducts","listCharacters","maxRequiredProducts","nameCorrectIndex","requiredNumberProducts","randomNameCorrect","audioBackground","Audio","audioFail","levels","timeStepPercentage","countdownTime","showCountdownModal","intervalId","showGameContent","audioBackgroundPaused","showErrorModal","showResultGameModal","finalScore","numberCorrect","nameCorrectDesc","numberCorrectDisplay","initTimeRemainder","score","gameTime","timerInterval","timeRemainder","timerRangeWidth","timeStep","gameSound","maxVolume","audioRatio","currentScore","currentLevel","requiredProductNumber","gameSlice","name","reducers","updateProducts","state","action","payload","updateCharacters","updateLevels","updateTimeStepPercentage","setTimerInterval","showCountdownTime","clearInterval","Math","max","setCountdownTime","resetCountdownTime","pauseCountdownTime","timeRemaining","concat","toggleCountdownModal","showGameOver","hideErrorModal","showResultGame","incrementScore","updateGameLevel","floor","levelData","find","level","timeStepDenominator","setIntervalId","clearGameInterval","toggleGameContent","resetGame","setShowRandomProductName","setRandomProductNumber","setGameData","products","characters","resetTimeRemainder","incrementNumberCorrect","resetNumberCorrect","showRandomNameCorrect","_state$listProducts$r","length","console","error","randomIndex","random","title","log","setAudioBackground","setAudioFail","pauseAudio","pause","playBackgroundSound","play","catch","playSoundGameOver","playbackRateAudioBackground","playbackRate","hideResultModal","actions","store","reducer","game"],"sources":["C:/Users/Admin/OneDrive/Máy tính/AUDIO/minigame-react/src/store/gameSlice.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  // Load data\r\n  listProducts: [],\r\n  listCharacters: [],\r\n  // Random\r\n  maxRequiredProducts: 5,\r\n  nameCorrectIndex: 0,\r\n  requiredNumberProducts: 0,\r\n  randomNameCorrect: '',\r\n  // Audio\r\n  audioBackground: new Audio(\"/music/bg_sound.mp3\"),\r\n  audioFail: new Audio(\"/music/wrong.mp3\"),\r\n  // Countdown Time\r\n  levels: [],\r\n  timeStepPercentage: 10,\r\n  // Countdown\r\n  countdownTime: 3,\r\n  showCountdownModal: false,\r\n  intervalId: null,\r\n  showGameContent: false,\r\n  // Error\r\n  audioBackgroundPaused: false,\r\n  showErrorModal: false,\r\n  // Result\r\n  showResultGameModal: false,\r\n  finalScore: 0,\r\n  // Reset Answer\r\n  numberCorrect: 0,\r\n  nameCorrectDesc: '',\r\n  numberCorrectDisplay: 'none',\r\n\r\n  initTimeRemainder: 100,\r\n\r\n  score: 0,\r\n\r\n  gameTime: {\r\n    timerInterval: null,\r\n    timeRemainder: 100,\r\n    timerRangeWidth: '100%',\r\n    timeStep: 10,\r\n  },\r\n  gameSound: {\r\n    audioBackground: \"/music/bg_sound.mp3\",\r\n    audioFail: \"music/wrong.mp3\",\r\n    maxVolume: 1,\r\n    audioRatio: 1,\r\n  },\r\n  // Update Level\r\n  currentScore: 0,\r\n  currentLevel: 1,\r\n\r\n  requiredProductNumber: 0,\r\n  // timerRangeWidth: '100%',\r\n};\r\n\r\nconst gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n\r\n  reducers: {\r\n    // Load data\r\n    updateProducts(state, action) {\r\n      state.listProducts = action.payload;\r\n    },\r\n    updateCharacters(state, action) {\r\n      state.listCharacters = action.payload;\r\n    },\r\n    updateLevels(state, action) {\r\n      state.levels = action.payload;\r\n    },\r\n    updateTimeStepPercentage(state, action) {\r\n      state.timeStepPercentage = action.payload;\r\n    },\r\n    setTimerInterval(state, action) {\r\n      state.gameTime.timerInterval = action.payload;\r\n    },\r\n    // Countdown Time\r\n    showCountdownTime(state) {\r\n      state.gameTime.timeRemainder -= state.gameTime.timeStep;\r\n      if (state.gameTime.timeRemainder <= 0) {\r\n        clearInterval(state.gameTime.timerInterval);\r\n        state.gameTime.timeRemainder = 0;\r\n        state.showErrorModal = true;\r\n      }\r\n      state.timerRangeWidth = Math.max(state.gameTime.timeRemainder / state.gameTime.timeStep * 100, 0) + '%';\r\n    },\r\n    setCountdownTime(state, action) {\r\n      state.countdownTime = action.payload;\r\n    },\r\n    // Thiết lập lại thời gian\r\n    resetCountdownTime(state) {\r\n      state.gameTime.timeRemainder = state.initTimeRemainder;\r\n      state.timerRangeWidth = '100%';\r\n      clearInterval(state.gameTime.timerInterval);\r\n    },\r\n    // Dừng thời gian\r\n    pauseCountdownTime(state) {\r\n      state.gameTime.timeRemaining = state.gameTime.timeRemainder;\r\n      clearInterval(state.gameTime.timerInterval);\r\n\r\n      state.gameTime.timerInterval = null;\r\n      state.gameTime.timerRangeWidth = `${(state.gameTime.timeRemaining / 100) * 100}%`;\r\n    },\r\n    // Countdown\r\n    toggleCountdownModal(state, action) {\r\n      state.showCountdownModal = action.payload;\r\n    },\r\n    // Error\r\n    showGameOver(state) {\r\n      clearInterval(state.gameTime.timerInterval);\r\n      state.showErrorModal = true;\r\n    },\r\n    hideErrorModal(state) {\r\n      state.showErrorModal = false;\r\n    },\r\n    // Result\r\n    showResultGame(state) {\r\n      state.showResultGameModal = true;\r\n      state.finalScore = state.currentScore;\r\n    },\r\n    // hideResultModal(state) {\r\n    //   state.showResultGameModal = false;\r\n    // },\r\n    incrementScore(state) {\r\n      state.currentScore += 1;\r\n    },\r\n    updateGameLevel(state) {\r\n      state.currentLevel = Math.floor(state.currentScore / 3) + 1;\r\n      const levelData = state.levels.find(level => level.level === state.currentLevel);\r\n      if (levelData) {\r\n        state.timeStepDenominator = levelData.timeStepPercentage;\r\n        state.gameTime.timeStep = state.initTimeRemainder / (100 / state.timeStepDenominator);\r\n      }\r\n    },\r\n    //\r\n    setIntervalId(state, action) {\r\n      state.intervalId = action.payload;\r\n    },\r\n    clearGameInterval(state) {\r\n      if (state.intervalId) {\r\n        clearInterval(state.intervalId);\r\n        state.intervalId = null;\r\n      }\r\n    },\r\n    //\r\n    toggleGameContent(state, action) {\r\n      state.showGameContent = action.payload;\r\n    },\r\n    resetGame() {\r\n      return initialState;\r\n    },\r\n    setShowRandomProductName(state, action) {\r\n      state.requiredNumberProducts = action.payload; // Sửa từ requiredProductName thành requiredNumberProducts\r\n    },\r\n\r\n    setRandomProductNumber(state, action) {\r\n      state.requiredProductNumber = action.payload;\r\n    },\r\n    setGameData(state, action) {\r\n      state.listProducts = action.payload.products;\r\n      state.listCharacters = action.payload.characters;\r\n      state.levels = action.payload.levels;\r\n    },\r\n    resetTimeRemainder: (state, action) => {\r\n      state.gameTime.timeRemainder = action.payload;\r\n    },\r\n    incrementNumberCorrect(state) {\r\n      state.numberCorrect += 1;\r\n    },\r\n    resetNumberCorrect(state) {\r\n      state.numberCorrect = 0;\r\n    },\r\n    // showRandomNameCorrect(state) {\r\n    //   const randomIndex = Math.floor(Math.random() * state.listProducts.length);\r\n    //   const maxRequiredProducts = 5;\r\n    //   state.nameCorrectIndex = randomIndex;\r\n    //   state.requiredNumberProducts = Math.floor(Math.random() * maxRequiredProducts) + 1;\r\n    //   state.randomNameCorrect = state.listProducts[randomIndex]?.title || '';\r\n    // },\r\n    showRandomNameCorrect(state) {\r\n      if (state.listProducts.length === 0) {\r\n        console.error('No products available for random selection');\r\n        return;\r\n      }\r\n      const randomIndex = Math.floor(Math.random() * state.listProducts.length);\r\n      const maxRequiredProducts = 5;\r\n      state.nameCorrectIndex = randomIndex;\r\n      state.requiredNumberProducts = Math.floor(Math.random() * maxRequiredProducts) + 1;\r\n      state.randomNameCorrect = state.listProducts[randomIndex]?.title || '';\r\n      console.log('Random Name Correct:', state.randomNameCorrect, 'Required Number:', state.requiredNumberProducts);\r\n    },\r\n    \r\n    setAudioBackground: (state, action) => {\r\n      state.audioBackground = new Audio(action.payload);\r\n    },\r\n    setAudioFail: (state, action) => {\r\n      state.audioFail = new Audio(action.payload);\r\n    },\r\n    pauseAudio: (state) => { state.audioBackground.pause(); },\r\n\r\n    playBackgroundSound: (state) => {\r\n      if (state.audioBackground) {\r\n        state.audioBackground.play().catch(error => {\r\n          console.error('Audio play failed:', error);\r\n        });\r\n      }\r\n    },\r\n    playSoundGameOver: (state) => {\r\n      if (state.audioFail) {\r\n        state.audioFail.play().catch(error => {\r\n          console.error('Audio play failed:', error);\r\n        });\r\n      }\r\n    },\r\n    playbackRateAudioBackground: (state, action) => {\r\n      if (state.audioBackground) {\r\n        state.audioBackground.playbackRate = action.payload;\r\n      }\r\n    },\r\n\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateProducts,\r\n  updateCharacters,\r\n  updateLevels,\r\n  updateTimeStepPercentage,\r\n  resetGame,\r\n\r\n  setCountdownTime,\r\n  toggleCountdownModal,\r\n\r\n  setIntervalId,\r\n  clearGameInterval,\r\n\r\n  setTimerInterval,\r\n  showCountdownTime,\r\n  resetCountdownTime,\r\n  pauseCountdownTime,\r\n\r\n  showGameOver,\r\n  hideErrorModal,\r\n\r\n  showResultGame,\r\n  hideResultModal,\r\n\r\n  toggleGameContent,\r\n  setShowRandomProductName,\r\n  setRandomProductNumber,\r\n  setGameData,\r\n  showRandomNameCorrect,\r\n\r\n  // resetAnswer,\r\n  incrementNumberCorrect,\r\n  resetNumberCorrect,\r\n\r\n  setAudioFail,\r\n  playBackgroundSound,\r\n  playSoundGameOver,\r\n  playbackRateAudioBackground,\r\n  pauseAudio,\r\n\r\n  incrementScore,\r\n  updateGameLevel,\r\n\r\n  resetTimeRemainder,\r\n} = gameSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice.reducer,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}